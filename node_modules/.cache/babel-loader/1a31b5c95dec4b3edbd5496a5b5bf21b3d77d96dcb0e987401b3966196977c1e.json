{"ast":null,"code":"var _jsxFileName = \"/Users/king/Documents/GitHub/fir-filter/src/AudioProcessor.js\",\n  _s = $RefreshSig$();\n// src/components/AudioProcessor.js\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 20px;\n`;\n_c = Container;\nconst Section = styled.div`\n  width: 80%;\n  margin: 20px 0;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n`;\n_c2 = Section;\nconst SectionTitle = styled.h2`\n  margin-bottom: 10px;\n  font-size: 24px;\n`;\n_c3 = SectionTitle;\nconst Button = styled.button`\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n_c4 = Button;\nconst InputLabel = styled.label`\n  display: inline-block;\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #008cba;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #007bb5;\n  }\n`;\n_c5 = InputLabel;\nconst HiddenInput = styled.input`\n  display: none;\n`;\n_c6 = HiddenInput;\nconst AudioContainer = styled.div`\n  margin: 20px 0;\n  text-align: center;\n`;\n_c7 = AudioContainer;\nconst AudioTitle = styled.h2`\n  font-size: 18px;\n  margin: 10px 0;\n`;\n_c8 = AudioTitle;\nconst Loader = styled.div`\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #3498db;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 2s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n_c9 = Loader;\nconst Select = styled.select`\n  padding: 10px;\n  margin: 10px;\n  font-size: 16px;\n`;\n_c10 = Select;\nconst AudioProcessor = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [audioURL, setAudioURL] = useState('');\n  const [noisyAudioURL, setNoisyAudioURL] = useState('');\n  const [filteredAudioURL, setFilteredAudioURL] = useState('');\n  const audioContextRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const [snr, setSnr] = useState(20);\n  const [filterLength, setFilterLength] = useState(128);\n  const startRecording = () => {\n    if (!audioContextRef.current) {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    }\n    setRecording(true);\n    audioChunksRef.current = [];\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = processAudio;\n      mediaRecorderRef.current.start();\n    });\n  };\n  const stopRecording = () => {\n    setRecording(false);\n    mediaRecorderRef.current.stop();\n  };\n  const processAudio = () => {\n    setLoading(true);\n    const audioBlob = new Blob(audioChunksRef.current, {\n      type: 'audio/wav'\n    });\n    const audioUrl = URL.createObjectURL(audioBlob);\n    setAudioURL(audioUrl);\n    setLoading(false);\n  };\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const audioUrl = URL.createObjectURL(file);\n      setAudioURL(audioUrl);\n    }\n  };\n  const addNoiseAndFilter = async () => {\n    setLoading(true);\n    const audioBuffer = await fetch(audioURL).then(response => response.arrayBuffer()).then(arrayBuffer => audioContextRef.current.decodeAudioData(arrayBuffer));\n    const noisyBuffer = addGaussianNoise(audioBuffer, snr);\n    const filteredBuffer = applyBandpassFilter(noisyBuffer, filterLength, 4000, 4500, 32000);\n    setNoisyAudioURL(URL.createObjectURL(bufferToWave(noisyBuffer, noisyBuffer.length)));\n    setFilteredAudioURL(URL.createObjectURL(bufferToWave(filteredBuffer, filteredBuffer.length)));\n    setLoading(false);\n  };\n  const addGaussianNoise = (buffer, snr) => {\n    const channelData = buffer.getChannelData(0);\n    const signalPower = channelData.reduce((acc, val) => acc + val * val, 0) / channelData.length;\n    const noisePower = signalPower / Math.pow(10, snr / 10);\n    const noise = new Float32Array(channelData.length).map(() => Math.sqrt(noisePower) * (Math.random() * 2 - 1));\n    const noisyData = new Float32Array(channelData.length);\n    for (let i = 0; i < channelData.length; i++) {\n      noisyData[i] = channelData[i] + noise[i];\n    }\n    const noisyBuffer = audioContextRef.current.createBuffer(1, noisyData.length, buffer.sampleRate);\n    noisyBuffer.copyToChannel(noisyData, 0);\n    return noisyBuffer;\n  };\n  const applyBandpassFilter = (buffer, filterLength, passbandStart, passbandEnd, sampleRate) => {\n    const nyquist = sampleRate / 2;\n    const normalPassbandStart = passbandStart / nyquist;\n    const normalPassbandEnd = passbandEnd / nyquist;\n    const taps = new Float32Array(filterLength);\n    for (let i = 0; i < filterLength; i++) {\n      const m = i - (filterLength - 1) / 2;\n      if (m === 0) {\n        taps[i] = 2 * (normalPassbandEnd - normalPassbandStart);\n      } else {\n        taps[i] = (Math.sin(2 * Math.PI * normalPassbandEnd * m) - Math.sin(2 * Math.PI * normalPassbandStart * m)) / (Math.PI * m);\n        taps[i] *= 0.54 - 0.46 * Math.cos(2 * Math.PI * i / (filterLength - 1)); // Hamming window\n      }\n    }\n    const filteredData = new Float32Array(buffer.length);\n    const channelData = buffer.getChannelData(0);\n    for (let i = 0; i < buffer.length; i++) {\n      let sum = 0;\n      for (let j = 0; j < filterLength; j++) {\n        if (i - j >= 0) {\n          sum += channelData[i - j] * taps[j];\n        }\n      }\n      filteredData[i] = sum;\n    }\n    const filteredBuffer = audioContextRef.current.createBuffer(1, filteredData.length, buffer.sampleRate);\n    filteredBuffer.copyToChannel(filteredData, 0);\n    return filteredBuffer;\n  };\n  const bufferToWave = (buffer, length) => {\n    const numOfChannels = buffer.numberOfChannels;\n    const bufferLength = length * numOfChannels * 2 + 44;\n    const bufferResult = new ArrayBuffer(bufferLength);\n    const view = new DataView(bufferResult);\n    const channels = [];\n    let pos = 0;\n    let offset = 0;\n    const writeString = str => {\n      for (let i = 0; i < str.length; i++) {\n        view.setUint8(pos + offset, str.charCodeAt(i));\n        offset++;\n      }\n    };\n    const write16Bit = val => {\n      view.setInt16(pos + offset, val, true);\n      offset += 2;\n    };\n    writeString('RIFF');\n    offset += 4;\n    view.setUint32(pos + offset, bufferLength - 8, true);\n    offset += 4;\n    writeString('WAVE');\n    offset += 4;\n    writeString('fmt ');\n    offset += 4;\n    view.setUint32(pos + offset, 16, true);\n    offset += 4;\n    view.setUint16(pos + offset, 1, true);\n    offset += 2;\n    view.setUint16(pos + offset, numOfChannels, true);\n    offset += 2;\n    view.setUint32(pos + offset, buffer.sampleRate, true);\n    offset += 4;\n    view.setUint32(pos + offset, buffer.sampleRate * 4, true);\n    offset += 4;\n    view.setUint16(pos + offset, numOfChannels * 2, true);\n    offset += 2;\n    view.setUint16(pos + offset, 16, true);\n    offset += 2;\n    writeString('data');\n    offset += 4;\n    view.setUint32(pos + offset, bufferLength - pos - 8, true);\n    offset += 4;\n    for (let i = 0; i < buffer.numberOfChannels; i++) {\n      channels.push(buffer.getChannelData(i));\n    }\n    while (pos < bufferLength) {\n      for (let i = 0; i < numOfChannels; i++) {\n        const sample = Math.max(-1, Math.min(1, channels[i][pos]));\n        view.setInt16(pos + offset, sample < 0 ? sample * 0x8000 : sample * 0x7FFF, true);\n        pos++;\n      }\n    }\n    return new Blob([view], {\n      type: 'audio/wav'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"\\u8F93\\u5165\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: recording ? stopRecording : startRecording,\n        children: recording ? '停止录音' : '开始录音'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        children: [\"\\u5BFC\\u5165\\u97F3\\u9891\", /*#__PURE__*/_jsxDEV(HiddenInput, {\n          type: \"file\",\n          accept: \"audio/*\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), audioURL && /*#__PURE__*/_jsxDEV(AudioContainer, {\n        children: [/*#__PURE__*/_jsxDEV(AudioTitle, {\n          children: \"\\u5F55\\u97F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: audioURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"\\u52A0\\u566A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u4FE1\\u566A\\u6BD4 (dB):\", /*#__PURE__*/_jsxDEV(Select, {\n          value: snr,\n          onChange: e => setSnr(e.target.value),\n          children: [5, 10, 15, 20, 25, 30].map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: value,\n            children: value\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addNoiseAndFilter,\n        children: \"\\u52A0\\u566A\\u5E76\\u964D\\u566A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }, this), noisyAudioURL && /*#__PURE__*/_jsxDEV(AudioContainer, {\n        children: [/*#__PURE__*/_jsxDEV(AudioTitle, {\n          children: \"\\u52A0\\u566A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: noisyAudioURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this), filteredAudioURL && /*#__PURE__*/_jsxDEV(AudioContainer, {\n        children: [/*#__PURE__*/_jsxDEV(AudioTitle, {\n          children: \"\\u964D\\u566A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: filteredAudioURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioProcessor, \"3s6kOprVKenx5QK7iQdbqbqyoL4=\");\n_c11 = AudioProcessor;\nexport default AudioProcessor;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Section\");\n$RefreshReg$(_c3, \"SectionTitle\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"InputLabel\");\n$RefreshReg$(_c6, \"HiddenInput\");\n$RefreshReg$(_c7, \"AudioContainer\");\n$RefreshReg$(_c8, \"AudioTitle\");\n$RefreshReg$(_c9, \"Loader\");\n$RefreshReg$(_c10, \"Select\");\n$RefreshReg$(_c11, \"AudioProcessor\");","map":{"version":3,"names":["React","useState","useRef","styled","jsxDEV","_jsxDEV","Container","div","_c","Section","_c2","SectionTitle","h2","_c3","Button","button","_c4","InputLabel","label","_c5","HiddenInput","input","_c6","AudioContainer","_c7","AudioTitle","_c8","Loader","_c9","Select","select","_c10","AudioProcessor","_s","recording","setRecording","loading","setLoading","audioURL","setAudioURL","noisyAudioURL","setNoisyAudioURL","filteredAudioURL","setFilteredAudioURL","audioContextRef","mediaRecorderRef","audioChunksRef","snr","setSnr","filterLength","setFilterLength","startRecording","current","window","AudioContext","webkitAudioContext","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","ondataavailable","event","push","data","onstop","processAudio","start","stopRecording","stop","audioBlob","Blob","type","audioUrl","URL","createObjectURL","handleFileUpload","file","target","files","addNoiseAndFilter","audioBuffer","fetch","response","arrayBuffer","decodeAudioData","noisyBuffer","addGaussianNoise","filteredBuffer","applyBandpassFilter","bufferToWave","length","buffer","channelData","getChannelData","signalPower","reduce","acc","val","noisePower","Math","pow","noise","Float32Array","map","sqrt","random","noisyData","i","createBuffer","sampleRate","copyToChannel","passbandStart","passbandEnd","nyquist","normalPassbandStart","normalPassbandEnd","taps","m","sin","PI","cos","filteredData","sum","j","numOfChannels","numberOfChannels","bufferLength","bufferResult","ArrayBuffer","view","DataView","channels","pos","offset","writeString","str","setUint8","charCodeAt","write16Bit","setInt16","setUint32","setUint16","sample","max","min","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","accept","onChange","controls","src","value","e","_c11","$RefreshReg$"],"sources":["/Users/king/Documents/GitHub/fir-filter/src/AudioProcessor.js"],"sourcesContent":["// src/components/AudioProcessor.js\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 20px;\n`;\n\nconst Section = styled.div`\n  width: 80%;\n  margin: 20px 0;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n`;\n\nconst SectionTitle = styled.h2`\n  margin-bottom: 10px;\n  font-size: 24px;\n`;\n\nconst Button = styled.button`\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n\nconst InputLabel = styled.label`\n  display: inline-block;\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #008cba;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #007bb5;\n  }\n`;\n\nconst HiddenInput = styled.input`\n  display: none;\n`;\n\nconst AudioContainer = styled.div`\n  margin: 20px 0;\n  text-align: center;\n`;\n\nconst AudioTitle = styled.h2`\n  font-size: 18px;\n  margin: 10px 0;\n`;\n\nconst Loader = styled.div`\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #3498db;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 2s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst Select = styled.select`\n  padding: 10px;\n  margin: 10px;\n  font-size: 16px;\n`;\n\nconst AudioProcessor = () => {\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [audioURL, setAudioURL] = useState('');\n  const [noisyAudioURL, setNoisyAudioURL] = useState('');\n  const [filteredAudioURL, setFilteredAudioURL] = useState('');\n  const audioContextRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const [snr, setSnr] = useState(20);\n  const [filterLength, setFilterLength] = useState(128);\n\n  const startRecording = () => {\n    if (!audioContextRef.current) {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    }\n    setRecording(true);\n    audioChunksRef.current = [];\n    navigator.mediaDevices.getUserMedia({ audio: true }).then(stream => {\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = processAudio;\n      mediaRecorderRef.current.start();\n    });\n  };\n\n  const stopRecording = () => {\n    setRecording(false);\n    mediaRecorderRef.current.stop();\n  };\n\n  const processAudio = () => {\n    setLoading(true);\n    const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n    const audioUrl = URL.createObjectURL(audioBlob);\n    setAudioURL(audioUrl);\n    setLoading(false);\n  };\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const audioUrl = URL.createObjectURL(file);\n      setAudioURL(audioUrl);\n    }\n  };\n\n  const addNoiseAndFilter = async () => {\n    setLoading(true);\n    const audioBuffer = await fetch(audioURL).then(response => response.arrayBuffer()).then(arrayBuffer => audioContextRef.current.decodeAudioData(arrayBuffer));\n    const noisyBuffer = addGaussianNoise(audioBuffer, snr);\n    const filteredBuffer = applyBandpassFilter(noisyBuffer, filterLength, 4000, 4500, 32000);\n    setNoisyAudioURL(URL.createObjectURL(bufferToWave(noisyBuffer, noisyBuffer.length)));\n    setFilteredAudioURL(URL.createObjectURL(bufferToWave(filteredBuffer, filteredBuffer.length)));\n    setLoading(false);\n  };\n\n  const addGaussianNoise = (buffer, snr) => {\n    const channelData = buffer.getChannelData(0);\n    const signalPower = channelData.reduce((acc, val) => acc + val * val, 0) / channelData.length;\n    const noisePower = signalPower / Math.pow(10, snr / 10);\n    const noise = new Float32Array(channelData.length).map(() => Math.sqrt(noisePower) * (Math.random() * 2 - 1));\n    const noisyData = new Float32Array(channelData.length);\n    for (let i = 0; i < channelData.length; i++) {\n      noisyData[i] = channelData[i] + noise[i];\n    }\n    const noisyBuffer = audioContextRef.current.createBuffer(1, noisyData.length, buffer.sampleRate);\n    noisyBuffer.copyToChannel(noisyData, 0);\n    return noisyBuffer;\n  };\n\n  const applyBandpassFilter = (buffer, filterLength, passbandStart, passbandEnd, sampleRate) => {\n    const nyquist = sampleRate / 2;\n    const normalPassbandStart = passbandStart / nyquist;\n    const normalPassbandEnd = passbandEnd / nyquist;\n    const taps = new Float32Array(filterLength);\n\n    for (let i = 0; i < filterLength; i++) {\n      const m = i - (filterLength - 1) / 2;\n      if (m === 0) {\n        taps[i] = 2 * (normalPassbandEnd - normalPassbandStart);\n      } else {\n        taps[i] = (Math.sin(2 * Math.PI * normalPassbandEnd * m) - Math.sin(2 * Math.PI * normalPassbandStart * m)) / (Math.PI * m);\n        taps[i] *= 0.54 - 0.46 * Math.cos(2 * Math.PI * i / (filterLength - 1)); // Hamming window\n      }\n    }\n\n    const filteredData = new Float32Array(buffer.length);\n    const channelData = buffer.getChannelData(0);\n    for (let i = 0; i < buffer.length; i++) {\n      let sum = 0;\n      for (let j = 0; j < filterLength; j++) {\n        if (i - j >= 0) {\n          sum += channelData[i - j] * taps[j];\n        }\n      }\n      filteredData[i] = sum;\n    }\n\n    const filteredBuffer = audioContextRef.current.createBuffer(1, filteredData.length, buffer.sampleRate);\n    filteredBuffer.copyToChannel(filteredData, 0);\n    return filteredBuffer;\n  };\n\n  const bufferToWave = (buffer, length) => {\n    const numOfChannels = buffer.numberOfChannels;\n    const bufferLength = length * numOfChannels * 2 + 44;\n    const bufferResult = new ArrayBuffer(bufferLength);\n    const view = new DataView(bufferResult);\n    const channels = [];\n    let pos = 0;\n    let offset = 0;\n\n    const writeString = (str) => {\n      for (let i = 0; i < str.length; i++) {\n        view.setUint8(pos + offset, str.charCodeAt(i));\n        offset++;\n      }\n    };\n\n    const write16Bit = (val) => {\n      view.setInt16(pos + offset, val, true);\n      offset += 2;\n    };\n\n    writeString('RIFF'); offset += 4;\n    view.setUint32(pos + offset, bufferLength - 8, true); offset += 4;\n    writeString('WAVE'); offset += 4;\n    writeString('fmt '); offset += 4;\n    view.setUint32(pos + offset, 16, true); offset += 4;\n    view.setUint16(pos + offset, 1, true); offset += 2;\n    view.setUint16(pos + offset, numOfChannels, true); offset += 2;\n    view.setUint32(pos + offset, buffer.sampleRate, true); offset += 4;\n    view.setUint32(pos + offset, buffer.sampleRate * 4, true); offset += 4;\n    view.setUint16(pos + offset, numOfChannels * 2, true); offset += 2;\n    view.setUint16(pos + offset, 16, true); offset += 2;\n    writeString('data'); offset += 4;\n    view.setUint32(pos + offset, bufferLength - pos - 8, true); offset += 4;\n\n    for (let i = 0; i < buffer.numberOfChannels; i++) {\n      channels.push(buffer.getChannelData(i));\n    }\n\n    while (pos < bufferLength) {\n      for (let i = 0; i < numOfChannels; i++) {\n        const sample = Math.max(-1, Math.min(1, channels[i][pos]));\n        view.setInt16(pos + offset, sample < 0 ? sample * 0x8000 : sample * 0x7FFF, true);\n        pos++;\n      }\n    }\n\n    return new Blob([view], { type: 'audio/wav' });\n  };\n\n  return (\n    <Container>\n      <Section>\n        <SectionTitle>输入</SectionTitle>\n        <Button onClick={recording ? stopRecording : startRecording}>\n          {recording ? '停止录音' : '开始录音'}\n        </Button>\n        <InputLabel>\n          导入音频\n          <HiddenInput type=\"file\" accept=\"audio/*\" onChange={handleFileUpload} />\n        </InputLabel>\n        {audioURL && (\n          <AudioContainer>\n            <AudioTitle>录音</AudioTitle>\n            <audio controls src={audioURL} />\n          </AudioContainer>\n        )}\n      </Section>\n      <Section>\n        <SectionTitle>加噪</SectionTitle>\n        <div>\n          信噪比 (dB):\n          <Select value={snr} onChange={e => setSnr(e.target.value)}>\n            {[5, 10, 15, 20, 25, 30].map(value => (\n              <option key={value} value={value}>\n                {value}\n              </option>\n            ))}\n          </Select>\n        </div>\n        <Button onClick={addNoiseAndFilter}>加噪并降噪</Button>\n        {loading && <Loader />}\n        {noisyAudioURL && (\n          <AudioContainer>\n            <AudioTitle>加噪</AudioTitle>\n            <audio controls src={noisyAudioURL} />\n          </AudioContainer>\n        )}\n        {filteredAudioURL && (\n          <AudioContainer>\n            <AudioTitle>降噪</AudioTitle>\n            <audio controls src={filteredAudioURL} />\n          </AudioContainer>\n        )}\n      </Section>\n    </Container>\n  );\n};\n\nexport default AudioProcessor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}