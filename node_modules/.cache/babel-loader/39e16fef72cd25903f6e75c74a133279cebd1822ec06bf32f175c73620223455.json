{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/king/Documents/GitHub/audio-processor/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject10,_templateObject11,_templateObject12;import React,{useState,useRef}from'react';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  width: 100%;\\n  padding: 20px;\\n\"])));const Section=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 80%;\\n  margin: 20px 0;\\n  padding: 20px;\\n  border: 1px solid #ccc;\\n  border-radius: 10px;\\n\"])));const SectionTitle=styled.h2(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin-bottom: 10px;\\n  font-size: 24px;\\n\"])));const Button=styled.button(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  font-size: 16px;\\n  padding: 10px 20px;\\n  margin: 10px;\\n  cursor: pointer;\\n  background-color: #4caf50;\\n  color: white;\\n  border: none;\\n  border-radius: 5px;\\n  &:hover {\\n    background-color: #45a049;\\n  }\\n\"])));const InputLabel=styled.label(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  display: inline-block;\\n  font-size: 16px;\\n  padding: 10px 20px;\\n  margin: 10px;\\n  cursor: pointer;\\n  background-color: #008cba;\\n  color: white;\\n  border: none;\\n  border-radius: 5px;\\n  &:hover {\\n    background-color: #007bb5;\\n  }\\n\"])));const Label=styled.label(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  font-size: 16px;\\n  padding: 10px 20px;\\n\"])));const HiddenInput=styled.input(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  display: none;\\n\"])));const AudioContainer=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  margin: 20px 0;\\n  text-align: center;\\n\"])));const AudioTitle=styled.h2(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  font-size: 18px;\\n  margin: 10px 0;\\n\"])));const Loader=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  border: 4px solid #f3f3f3;\\n  border-top: 4px solid #3498db;\\n  border-radius: 50%;\\n  width: 40px;\\n  height: 40px;\\n  animation: spin 2s linear infinite;\\n\\n  @keyframes spin {\\n    0% { transform: rotate(0deg); }\\n    100% { transform: rotate(360deg); }\\n  }\\n\"])));const Select=styled.select(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  padding: 10px;\\n  margin: 10px;\\n  font-size: 16px;\\n\"])));const Input=styled.input(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  padding: 10px;\\n  margin: 10px;\\n  font-size: 16px;\\n\"])));const AudioProcessor=()=>{const[recording,setRecording]=useState(false);const[loading,setLoading]=useState(false);const[audioURL,setAudioURL]=useState('');const[noisyAudioURL,setNoisyAudioURL]=useState('');const[filteredAudioURL,setFilteredAudioURL]=useState('');const audioContextRef=useRef(new(window.AudioContext||window.webkitAudioContext)());const mediaRecorderRef=useRef(null);const audioChunksRef=useRef([]);const[snr,setSnr]=useState(20);const[filterLength,setFilterLength]=useState(127);const[lowFreq,setLowFreq]=useState(300);const[highFreq,setHighFreq]=useState(3400);const[filterType,setFilterType]=useState('bandpass');const[stepSize,setstepSize]=useState(0.0001);const startRecording=()=>{setRecording(true);audioChunksRef.current=[];navigator.mediaDevices.getUserMedia({audio:true}).then(stream=>{mediaRecorderRef.current=new MediaRecorder(stream);mediaRecorderRef.current.ondataavailable=event=>{audioChunksRef.current.push(event.data);};mediaRecorderRef.current.onstop=processAudio;mediaRecorderRef.current.start();});};const stopRecording=()=>{setRecording(false);mediaRecorderRef.current.stop();};const processAudio=()=>{setLoading(true);const audioBlob=new Blob(audioChunksRef.current,{type:'audio/wav'});const audioUrl=URL.createObjectURL(audioBlob);setAudioURL(audioUrl);setLoading(false);};const handleFileUpload=event=>{const file=event.target.files[0];if(file){const audioUrl=URL.createObjectURL(file);setAudioURL(audioUrl);}};const addNoiseAndFilter=async()=>{try{setLoading(true);const audioBuffer=await fetch(audioURL).then(response=>response.arrayBuffer()).then(arrayBuffer=>audioContextRef.current.decodeAudioData(arrayBuffer));const noisyBuffer=addGaussianNoise(audioBuffer,snr);let filteredBuffer;if(filterType==='adaptive'){filteredBuffer=applyAdaptiveFilter(noisyBuffer,filterLength,audioBuffer.sampleRate);}else if(filterType==='bandpass'){filteredBuffer=applyBandpassFilter(noisyBuffer,filterLength,lowFreq,highFreq,audioBuffer.sampleRate);}else if(filterType==='wiener'){filteredBuffer=applyWienerFilter(noisyBuffer);}setNoisyAudioURL(URL.createObjectURL(bufferToWave(noisyBuffer,noisyBuffer.length)));setFilteredAudioURL(URL.createObjectURL(bufferToWave(filteredBuffer,filteredBuffer.length)));}catch(error){console.error('Error processing audio:',error);}finally{setLoading(false);}};const addGaussianNoise=(buffer,snr)=>{const channelData=buffer.getChannelData(0);const signalPower=channelData.reduce((acc,val)=>acc+val*val,0)/channelData.length;const noisePower=signalPower/Math.pow(10,snr/10);const noise=new Float32Array(channelData.length).map(()=>Math.sqrt(noisePower)*(Math.random()*2-1));const noisyData=new Float32Array(channelData.length);for(let i=0;i<channelData.length;i++){noisyData[i]=channelData[i]+noise[i];}const noisyBuffer=audioContextRef.current.createBuffer(1,noisyData.length,buffer.sampleRate);noisyBuffer.copyToChannel(noisyData,0);return noisyBuffer;};const applyBandpassFilter=(buffer,filterLength,passbandStart,passbandEnd,sampleRate)=>{const nyquist=sampleRate/2;const normalPassbandStart=passbandStart/nyquist;const normalPassbandEnd=passbandEnd/nyquist;const taps=new Float32Array(filterLength);for(let i=0;i<filterLength;i++){const m=i-(filterLength-1)/2;if(m===0){taps[i]=2*(normalPassbandEnd-normalPassbandStart);}else{taps[i]=(Math.sin(2*Math.PI*normalPassbandEnd*m)-Math.sin(2*Math.PI*normalPassbandStart*m))/(Math.PI*m);taps[i]*=0.54-0.46*Math.cos(2*Math.PI*i/(filterLength-1));// Hamming window\n}}const filteredData=new Float32Array(buffer.length);const channelData=buffer.getChannelData(0);for(let i=0;i<buffer.length;i++){let sum=0;for(let j=0;j<filterLength;j++){if(i-j>=0){sum+=channelData[i-j]*taps[j];}}filteredData[i]=sum;}const filteredBuffer=audioContextRef.current.createBuffer(1,filteredData.length,buffer.sampleRate);filteredBuffer.copyToChannel(filteredData,0);return filteredBuffer;};const applyAdaptiveFilter=(buffer,filterLength,sampleRate)=>{const channelData=buffer.getChannelData(0);const desiredSignal=channelData.slice();// 假设理想信号已知或近似为无噪声信号\nconst filteredData=new Float32Array(channelData.length);const filterWeights=new Float32Array(filterLength).fill(0);const stepSize=0.0001;// 步长因子，控制滤波器调整速度\nfor(let i=0;i<channelData.length-filterLength;i++){const x=channelData.slice(i,i+filterLength);const y=filterWeights.reduce((sum,weight,j)=>sum+weight*x[j],0);const e=desiredSignal[i]-y;for(let j=0;j<filterLength;j++){filterWeights[j]+=stepSize*e*x[j];}filteredData[i]=y;}const filteredBuffer=audioContextRef.current.createBuffer(1,filteredData.length,buffer.sampleRate);filteredBuffer.copyToChannel(filteredData,0);return filteredBuffer;};const applyWienerFilter=buffer=>{const channelData=buffer.getChannelData(0);const noisePower=channelData.reduce((acc,val)=>acc+val*val,0)/channelData.length;const filteredData=channelData.map((value,index)=>{const localMean=(channelData[index-1]||0)+value+(channelData[index+1]||0)/3;const localVariance=Math.pow(channelData[index-1]||0-localMean,2)+Math.pow(value-localMean,2)+Math.pow(channelData[index+1]||0-localMean,2)/3;const signalPower=Math.max(localVariance-noisePower,0);const gain=signalPower/(signalPower+noisePower);return gain*value;});const filteredBuffer=audioContextRef.current.createBuffer(1,filteredData.length,buffer.sampleRate);filteredBuffer.copyToChannel(filteredData,0);return filteredBuffer;};const bufferToWave=(buffer,len)=>{const numOfChan=buffer.numberOfChannels;const length=len*numOfChan*2+44;const bufferArray=new ArrayBuffer(length);const view=new DataView(bufferArray);const channels=[];let sample;let offset=0;let pos=0;const setUint16=data=>{view.setUint16(pos,data,true);pos+=2;};const setUint32=data=>{view.setUint32(pos,data,true);pos+=4;};const writeString=str=>{for(let i=0;i<str.length;i++){view.setUint8(pos++,str.charCodeAt(i));}};writeString('RIFF');// ChunkID\nsetUint32(length-8);// ChunkSize\nwriteString('WAVE');// Format\nwriteString('fmt ');// Subchunk1ID\nsetUint32(16);// Subchunk1Size\nsetUint16(1);// AudioFormat (PCM)\nsetUint16(numOfChan);// NumChannels\nsetUint32(buffer.sampleRate);// SampleRate\nsetUint32(buffer.sampleRate*2*numOfChan);// ByteRate\nsetUint16(numOfChan*2);// BlockAlign\nsetUint16(16);// BitsPerSample\nwriteString('data');// Subchunk2ID\nsetUint32(length-pos-4);// Subchunk2Size\nfor(let i=0;i<buffer.numberOfChannels;i++){channels.push(buffer.getChannelData(i));}while(offset<len){for(let i=0;i<numOfChan;i++){sample=Math.max(-1,Math.min(1,channels[i][offset]));// Clamp sample to range [-1, 1]\nsample=(sample<0?sample*32768:sample*32767)|0;// Convert to 16-bit PCM\nview.setInt16(pos,sample,true);// Write sample to DataView\npos+=2;}offset++;}const blob=new Blob([bufferArray],{type:'audio/wav'});return blob;};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Section,{children:[/*#__PURE__*/_jsx(SectionTitle,{children:\"\\u8F93\\u5165\"}),/*#__PURE__*/_jsx(Button,{onClick:recording?stopRecording:startRecording,children:recording?'停止录音':'开始录音'}),/*#__PURE__*/_jsxs(InputLabel,{children:[\"\\u5BFC\\u5165\\u97F3\\u9891\",/*#__PURE__*/_jsx(HiddenInput,{type:\"file\",accept:\"audio/*\",onChange:handleFileUpload})]}),audioURL&&/*#__PURE__*/_jsxs(AudioContainer,{children:[/*#__PURE__*/_jsx(AudioTitle,{children:\"\\u539F\\u59CB\\u97F3\\u9891\"}),/*#__PURE__*/_jsx(\"audio\",{controls:true,src:audioURL})]})]}),/*#__PURE__*/_jsxs(Section,{children:[/*#__PURE__*/_jsx(SectionTitle,{children:\"\\u566A\\u58F0\\u4E0E\\u6EE4\\u6CE2\\u5668\\u8BBE\\u7F6E\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Label,{children:[\"\\u4FE1\\u566A\\u6BD4 (dB):\",/*#__PURE__*/_jsx(Input,{type:\"number\",value:snr,onChange:e=>setSnr(e.target.value)})]}),/*#__PURE__*/_jsxs(Label,{children:[\"\\u6EE4\\u6CE2\\u5668\\u7C7B\\u578B:\",/*#__PURE__*/_jsxs(Select,{value:filterType,onChange:e=>setFilterType(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"bandpass\",children:\"\\u5E26\\u901A\"}),/*#__PURE__*/_jsx(\"option\",{value:\"adaptive\",children:\"\\u81EA\\u9002\\u5E94\"}),/*#__PURE__*/_jsx(\"option\",{value:\"wiener\",children:\"\\u7EF4\\u7EB3\\u6EE4\\u6CE2\"})]})]})]}),filterType==='bandpass'&&/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Label,{children:[\"\\u6EE4\\u6CE2\\u5668\\u957F\\u5EA6:\",/*#__PURE__*/_jsx(Input,{type:\"number\",value:filterLength,onChange:e=>setFilterLength(e.target.value)})]}),/*#__PURE__*/_jsxs(Label,{children:[\"\\u6700\\u4F4E\\u9891\\u7387 (Hz):\",/*#__PURE__*/_jsx(Input,{type:\"number\",value:lowFreq,onChange:e=>setLowFreq(e.target.value)})]}),/*#__PURE__*/_jsxs(Label,{children:[\"\\u6700\\u9AD8\\u9891\\u7387 (Hz):\",/*#__PURE__*/_jsx(Input,{type:\"number\",value:highFreq,onChange:e=>setHighFreq(e.target.value)})]})]}),filterType==='adaptive'&&/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(Label,{children:[\"\\u6B65\\u957F:\",/*#__PURE__*/_jsx(Input,{type:\"number\",value:stepSize,onChange:e=>setstepSize(e.target.value)})]})}),/*#__PURE__*/_jsx(Button,{onClick:addNoiseAndFilter,children:\"\\u5904\\u7406\\u97F3\\u9891\"})]}),loading&&/*#__PURE__*/_jsx(Loader,{}),/*#__PURE__*/_jsxs(Section,{children:[/*#__PURE__*/_jsx(SectionTitle,{children:\"\\u5904\\u7406\\u540E\\u97F3\\u9891\"}),noisyAudioURL&&/*#__PURE__*/_jsxs(AudioContainer,{children:[/*#__PURE__*/_jsx(AudioTitle,{children:\"\\u52A0\\u566A\\u540E\\u97F3\\u9891\"}),/*#__PURE__*/_jsx(\"audio\",{controls:true,src:noisyAudioURL})]}),filteredAudioURL&&/*#__PURE__*/_jsxs(AudioContainer,{children:[/*#__PURE__*/_jsx(AudioTitle,{children:\"\\u964D\\u566A\\u540E\\u97F3\\u9891\"}),/*#__PURE__*/_jsx(\"audio\",{controls:true,src:filteredAudioURL})]})]})]});};export default AudioProcessor;","map":{"version":3,"names":["React","useState","useRef","styled","jsx","_jsx","jsxs","_jsxs","Container","div","_templateObject","_taggedTemplateLiteral","Section","_templateObject2","SectionTitle","h2","_templateObject3","Button","button","_templateObject4","InputLabel","label","_templateObject5","Label","_templateObject6","HiddenInput","input","_templateObject7","AudioContainer","_templateObject8","AudioTitle","_templateObject9","Loader","_templateObject10","Select","select","_templateObject11","Input","_templateObject12","AudioProcessor","recording","setRecording","loading","setLoading","audioURL","setAudioURL","noisyAudioURL","setNoisyAudioURL","filteredAudioURL","setFilteredAudioURL","audioContextRef","window","AudioContext","webkitAudioContext","mediaRecorderRef","audioChunksRef","snr","setSnr","filterLength","setFilterLength","lowFreq","setLowFreq","highFreq","setHighFreq","filterType","setFilterType","stepSize","setstepSize","startRecording","current","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","ondataavailable","event","push","data","onstop","processAudio","start","stopRecording","stop","audioBlob","Blob","type","audioUrl","URL","createObjectURL","handleFileUpload","file","target","files","addNoiseAndFilter","audioBuffer","fetch","response","arrayBuffer","decodeAudioData","noisyBuffer","addGaussianNoise","filteredBuffer","applyAdaptiveFilter","sampleRate","applyBandpassFilter","applyWienerFilter","bufferToWave","length","error","console","buffer","channelData","getChannelData","signalPower","reduce","acc","val","noisePower","Math","pow","noise","Float32Array","map","sqrt","random","noisyData","i","createBuffer","copyToChannel","passbandStart","passbandEnd","nyquist","normalPassbandStart","normalPassbandEnd","taps","m","sin","PI","cos","filteredData","sum","j","desiredSignal","slice","filterWeights","fill","x","y","weight","e","value","index","localMean","localVariance","max","gain","len","numOfChan","numberOfChannels","bufferArray","ArrayBuffer","view","DataView","channels","sample","offset","pos","setUint16","setUint32","writeString","str","setUint8","charCodeAt","min","setInt16","blob","children","onClick","accept","onChange","controls","src"],"sources":["/Users/king/Documents/GitHub/audio-processor/src/AudioProcessor.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 20px;\n`;\n\nconst Section = styled.div`\n  width: 80%;\n  margin: 20px 0;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n`;\n\nconst SectionTitle = styled.h2`\n  margin-bottom: 10px;\n  font-size: 24px;\n`;\n\nconst Button = styled.button`\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n\nconst InputLabel = styled.label`\n  display: inline-block;\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #008cba;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #007bb5;\n  }\n`;\n\nconst Label = styled.label`\n  font-size: 16px;\n  padding: 10px 20px;\n`;\n\nconst HiddenInput = styled.input`\n  display: none;\n`;\n\nconst AudioContainer = styled.div`\n  margin: 20px 0;\n  text-align: center;\n`;\n\nconst AudioTitle = styled.h2`\n  font-size: 18px;\n  margin: 10px 0;\n`;\n\nconst Loader = styled.div`\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #3498db;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 2s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst Select = styled.select`\n  padding: 10px;\n  margin: 10px;\n  font-size: 16px;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  margin: 10px;\n  font-size: 16px;\n`;\n\nconst AudioProcessor = () => {\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [audioURL, setAudioURL] = useState('');\n  const [noisyAudioURL, setNoisyAudioURL] = useState('');\n  const [filteredAudioURL, setFilteredAudioURL] = useState('');\n  const audioContextRef = useRef(new (window.AudioContext || window.webkitAudioContext)());\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const [snr, setSnr] = useState(20);\n  const [filterLength, setFilterLength] = useState(127);\n  const [lowFreq, setLowFreq] = useState(300);\n  const [highFreq, setHighFreq] = useState(3400);\n  const [filterType, setFilterType] = useState('bandpass');\n  const [stepSize, setstepSize] = useState(0.0001);\n\n  const startRecording = () => {\n    setRecording(true);\n    audioChunksRef.current = [];\n    navigator.mediaDevices.getUserMedia({ audio: true }).then(stream => {\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = processAudio;\n      mediaRecorderRef.current.start();\n    });\n  };\n\n  const stopRecording = () => {\n    setRecording(false);\n    mediaRecorderRef.current.stop();\n  };\n\n  const processAudio = () => {\n    setLoading(true);\n    const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n    const audioUrl = URL.createObjectURL(audioBlob);\n    setAudioURL(audioUrl);\n    setLoading(false);\n  };\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const audioUrl = URL.createObjectURL(file);\n      setAudioURL(audioUrl);\n    }\n  };\n\n  const addNoiseAndFilter = async () => {\n    try {\n      setLoading(true);\n      const audioBuffer = await fetch(audioURL)\n        .then(response => response.arrayBuffer())\n        .then(arrayBuffer => audioContextRef.current.decodeAudioData(arrayBuffer));\n\n      const noisyBuffer = addGaussianNoise(audioBuffer, snr);\n      let filteredBuffer;\n      if (filterType === 'adaptive') {\n        filteredBuffer = applyAdaptiveFilter(noisyBuffer, filterLength, audioBuffer.sampleRate);\n      } else if (filterType === 'bandpass') {\n        filteredBuffer = applyBandpassFilter(noisyBuffer, filterLength, lowFreq, highFreq, audioBuffer.sampleRate);\n      } else if (filterType === 'wiener') {\n        filteredBuffer = applyWienerFilter(noisyBuffer);\n      }\n\n      setNoisyAudioURL(URL.createObjectURL(bufferToWave(noisyBuffer, noisyBuffer.length)));\n      setFilteredAudioURL(URL.createObjectURL(bufferToWave(filteredBuffer, filteredBuffer.length)));\n    } catch (error) {\n      console.error('Error processing audio:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addGaussianNoise = (buffer, snr) => {\n    const channelData = buffer.getChannelData(0);\n    const signalPower = channelData.reduce((acc, val) => acc + val * val, 0) / channelData.length;\n    const noisePower = signalPower / Math.pow(10, snr / 10);\n    const noise = new Float32Array(channelData.length).map(() => Math.sqrt(noisePower) * (Math.random() * 2 - 1));\n    const noisyData = new Float32Array(channelData.length);\n    for (let i = 0; i < channelData.length; i++) {\n      noisyData[i] = channelData[i] + noise[i];\n    }\n    const noisyBuffer = audioContextRef.current.createBuffer(1, noisyData.length, buffer.sampleRate);\n    noisyBuffer.copyToChannel(noisyData, 0);\n    return noisyBuffer;\n  };\n\n  const applyBandpassFilter = (buffer, filterLength, passbandStart, passbandEnd, sampleRate) => {\n    const nyquist = sampleRate / 2;\n    const normalPassbandStart = passbandStart / nyquist;\n    const normalPassbandEnd = passbandEnd / nyquist;\n    const taps = new Float32Array(filterLength);\n\n    for (let i = 0; i < filterLength; i++) {\n      const m = i - (filterLength - 1) / 2;\n      if (m === 0) {\n        taps[i] = 2 * (normalPassbandEnd - normalPassbandStart);\n      } else {\n        taps[i] = (Math.sin(2 * Math.PI * normalPassbandEnd * m) - Math.sin(2 * Math.PI * normalPassbandStart * m)) / (Math.PI * m);\n        taps[i] *= 0.54 - 0.46 * Math.cos(2 * Math.PI * i / (filterLength - 1)); // Hamming window\n      }\n    }\n\n    const filteredData = new Float32Array(buffer.length);\n    const channelData = buffer.getChannelData(0);\n    for (let i = 0; i < buffer.length; i++) {\n      let sum = 0;\n      for (let j = 0; j < filterLength; j++) {\n        if (i - j >= 0) {\n          sum += channelData[i - j] * taps[j];\n        }\n      }\n      filteredData[i] = sum;\n    }\n\n    const filteredBuffer = audioContextRef.current.createBuffer(1, filteredData.length, buffer.sampleRate);\n    filteredBuffer.copyToChannel(filteredData, 0);\n    return filteredBuffer;\n  };\n\n  const applyAdaptiveFilter = (buffer, filterLength, sampleRate) => {\n    const channelData = buffer.getChannelData(0);\n    const desiredSignal = channelData.slice(); // 假设理想信号已知或近似为无噪声信号\n    const filteredData = new Float32Array(channelData.length);\n    const filterWeights = new Float32Array(filterLength).fill(0);\n    const stepSize = 0.0001; // 步长因子，控制滤波器调整速度\n\n    for (let i = 0; i < channelData.length - filterLength; i++) {\n      const x = channelData.slice(i, i + filterLength);\n      const y = filterWeights.reduce((sum, weight, j) => sum + weight * x[j], 0);\n      const e = desiredSignal[i] - y;\n\n      for (let j = 0; j < filterLength; j++) {\n        filterWeights[j] += stepSize * e * x[j];\n      }\n\n      filteredData[i] = y;\n    }\n\n    const filteredBuffer = audioContextRef.current.createBuffer(1, filteredData.length, buffer.sampleRate);\n    filteredBuffer.copyToChannel(filteredData, 0);\n    return filteredBuffer;\n  };\n  const applyWienerFilter = (buffer) => {\n    const channelData = buffer.getChannelData(0);\n    const noisePower = channelData.reduce((acc, val) => acc + val * val, 0) / channelData.length;\n\n    const filteredData = channelData.map((value, index) => {\n      const localMean = (channelData[index - 1] || 0) + value + (channelData[index + 1] || 0) / 3;\n      const localVariance = Math.pow(channelData[index - 1] || 0 - localMean, 2) + Math.pow(value - localMean, 2) + Math.pow(channelData[index + 1] || 0 - localMean, 2) / 3;\n      const signalPower = Math.max(localVariance - noisePower, 0);\n      const gain = signalPower / (signalPower + noisePower);\n      return gain * value;\n    });\n\n    const filteredBuffer = audioContextRef.current.createBuffer(1, filteredData.length, buffer.sampleRate);\n    filteredBuffer.copyToChannel(filteredData, 0);\n    return filteredBuffer;\n  };\n\n  const bufferToWave = (buffer, len) => {\n    const numOfChan = buffer.numberOfChannels;\n    const length = len * numOfChan * 2 + 44;\n    const bufferArray = new ArrayBuffer(length);\n    const view = new DataView(bufferArray);\n    const channels = [];\n    let sample;\n    let offset = 0;\n    let pos = 0;\n  \n    const setUint16 = (data) => {\n      view.setUint16(pos, data, true);\n      pos += 2;\n    };\n  \n    const setUint32 = (data) => {\n      view.setUint32(pos, data, true);\n      pos += 4;\n    };\n  \n    const writeString = (str) => {\n      for (let i = 0; i < str.length; i++) {\n        view.setUint8(pos++, str.charCodeAt(i));\n      }\n    };\n  \n    writeString('RIFF');             // ChunkID\n    setUint32(length - 8);           // ChunkSize\n    writeString('WAVE');             // Format\n    writeString('fmt ');             // Subchunk1ID\n    setUint32(16);                   // Subchunk1Size\n    setUint16(1);                    // AudioFormat (PCM)\n    setUint16(numOfChan);            // NumChannels\n    setUint32(buffer.sampleRate);    // SampleRate\n    setUint32(buffer.sampleRate * 2 * numOfChan); // ByteRate\n    setUint16(numOfChan * 2);        // BlockAlign\n    setUint16(16);                   // BitsPerSample\n    writeString('data');             // Subchunk2ID\n    setUint32(length - pos - 4);     // Subchunk2Size\n  \n    for (let i = 0; i < buffer.numberOfChannels; i++) {\n      channels.push(buffer.getChannelData(i));\n    }\n  \n    while (offset < len) {\n      for (let i = 0; i < numOfChan; i++) {\n        sample = Math.max(-1, Math.min(1, channels[i][offset])); // Clamp sample to range [-1, 1]\n        sample = (sample < 0 ? sample * 32768 : sample * 32767) | 0; // Convert to 16-bit PCM\n        view.setInt16(pos, sample, true); // Write sample to DataView\n        pos += 2;\n      }\n      offset++;\n    }\n  \n    const blob = new Blob([bufferArray], { type: 'audio/wav' });\n    return blob;\n  };\n  \n\n  return (\n    <Container>\n      <Section>\n        <SectionTitle>输入</SectionTitle>\n        <Button onClick={recording ? stopRecording : startRecording}>\n          {recording ? '停止录音' : '开始录音'}\n        </Button>\n        <InputLabel>\n          导入音频\n          <HiddenInput type=\"file\" accept=\"audio/*\" onChange={handleFileUpload} />\n        </InputLabel>\n        {audioURL && (\n          <AudioContainer>\n            <AudioTitle>原始音频</AudioTitle>\n            <audio controls src={audioURL} />\n          </AudioContainer>\n        )}\n      </Section>\n      <Section>\n        <SectionTitle>噪声与滤波器设置</SectionTitle>\n        <div>\n          <Label>\n            信噪比 (dB):\n            <Input type=\"number\" value={snr} onChange={(e) => setSnr(e.target.value)} />\n          </Label>\n          <Label>\n            滤波器类型:\n            <Select value={filterType} onChange={(e) => setFilterType(e.target.value)}>\n              <option value=\"bandpass\">带通</option>\n              <option value=\"adaptive\">自适应</option>\n              <option value=\"wiener\">维纳滤波</option>\n            </Select>\n          </Label>\n        </div>\n        {filterType === 'bandpass' && (\n          <Container>\n            <Label>\n              滤波器长度:\n              <Input type=\"number\" value={filterLength} onChange={(e) => setFilterLength(e.target.value)} />\n            </Label>\n            <Label>\n              最低频率 (Hz):\n              <Input type=\"number\" value={lowFreq} onChange={(e) => setLowFreq(e.target.value)} />\n            </Label>\n            <Label>\n              最高频率 (Hz):\n              <Input type=\"number\" value={highFreq} onChange={(e) => setHighFreq(e.target.value)} />\n            </Label>\n          </Container>\n        )}\n        {filterType === 'adaptive' && (\n          <Container>\n            <Label>\n              步长:\n              <Input type=\"number\" value={stepSize} onChange={(e) => setstepSize(e.target.value)} />\n            </Label>\n          </Container>\n        )}\n        \n        <Button onClick={addNoiseAndFilter}>处理音频</Button>\n      </Section>\n      {loading && <Loader />}\n      <Section>\n        <SectionTitle>处理后音频</SectionTitle>\n          {noisyAudioURL && (\n            <AudioContainer>\n              <AudioTitle>加噪后音频</AudioTitle>\n              <audio controls src={noisyAudioURL} />\n            </AudioContainer>\n          )}\n          {filteredAudioURL && (\n            <AudioContainer>\n              <AudioTitle>降噪后音频</AudioTitle>\n              <audio controls src={filteredAudioURL} />\n            </AudioContainer>\n          )}\n      </Section>\n    </Container>\n  );\n};\n\nexport default AudioProcessor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}