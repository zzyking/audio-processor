{"ast":null,"code":"var _jsxFileName = \"/Users/king/Documents/GitHub/fir-filter/src/AudioProcessor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 20px;\n`;\n_c = Container;\nconst Section = styled.div`\n  width: 80%;\n  margin: 20px 0;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n`;\n_c2 = Section;\nconst SectionTitle = styled.h2`\n  margin-bottom: 10px;\n  font-size: 24px;\n`;\n_c3 = SectionTitle;\nconst Button = styled.button`\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n_c4 = Button;\nconst InputLabel = styled.label`\n  display: inline-block;\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #008cba;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #007bb5;\n  }\n`;\n_c5 = InputLabel;\nconst Label = styled.label`\n  font-size: 16px;\n  padding: 10px 20px;\n`;\n_c6 = Label;\nconst HiddenInput = styled.input`\n  display: none;\n`;\n_c7 = HiddenInput;\nconst AudioContainer = styled.div`\n  margin: 20px 0;\n  text-align: center;\n`;\n_c8 = AudioContainer;\nconst AudioTitle = styled.h2`\n  font-size: 18px;\n  margin: 10px 0;\n`;\n_c9 = AudioTitle;\nconst Loader = styled.div`\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #3498db;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 2s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n_c10 = Loader;\nconst Select = styled.select`\n  padding: 10px;\n  margin: 10px;\n  font-size: 16px;\n`;\n_c11 = Select;\nconst Input = styled.input`\n  padding: 10px;\n  margin: 10px;\n  font-size: 16px;\n`;\n_c12 = Input;\nconst AudioProcessor = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [audioURL, setAudioURL] = useState('');\n  const [noisyAudioURL, setNoisyAudioURL] = useState('');\n  const [filteredAudioURL, setFilteredAudioURL] = useState('');\n  const audioContextRef = useRef(new (window.AudioContext || window.webkitAudioContext)());\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const [snr, setSnr] = useState(20);\n  const [filterLength, setFilterLength] = useState(127);\n  const [lowFreq, setLowFreq] = useState(300);\n  const [highFreq, setHighFreq] = useState(3400);\n  const [filterType, setFilterType] = useState('bandpass');\n  const startRecording = () => {\n    setRecording(true);\n    audioChunksRef.current = [];\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = processAudio;\n      mediaRecorderRef.current.start();\n    });\n  };\n  const stopRecording = () => {\n    setRecording(false);\n    mediaRecorderRef.current.stop();\n  };\n  const processAudio = () => {\n    setLoading(true);\n    const audioBlob = new Blob(audioChunksRef.current, {\n      type: 'audio/wav'\n    });\n    const audioUrl = URL.createObjectURL(audioBlob);\n    setAudioURL(audioUrl);\n    setLoading(false);\n  };\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const audioUrl = URL.createObjectURL(file);\n      setAudioURL(audioUrl);\n    }\n  };\n  const addNoiseAndFilter = async () => {\n    try {\n      setLoading(true);\n      const audioBuffer = await fetch(audioURL).then(response => response.arrayBuffer()).then(arrayBuffer => audioContextRef.current.decodeAudioData(arrayBuffer));\n      const noisyBuffer = addGaussianNoise(audioBuffer, snr);\n      let filteredBuffer;\n      if (filterType === 'adaptive') {\n        filteredBuffer = applyAdaptiveFilter(noisyBuffer, filterLength, audioBuffer.sampleRate);\n      } else {\n        filteredBuffer = applyBandpassFilter(noisyBuffer, filterLength, lowFreq, highFreq, audioBuffer.sampleRate);\n      }\n      setNoisyAudioURL(URL.createObjectURL(bufferToWave(noisyBuffer, noisyBuffer.length)));\n      setFilteredAudioURL(URL.createObjectURL(bufferToWave(filteredBuffer, filteredBuffer.length)));\n    } catch (error) {\n      console.error('Error processing audio:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addGaussianNoise = (buffer, snr) => {\n    const channelData = buffer.getChannelData(0);\n    const signalPower = channelData.reduce((acc, val) => acc + val * val, 0) / channelData.length;\n    const noisePower = signalPower / Math.pow(10, snr / 10);\n    const noise = new Float32Array(channelData.length).map(() => Math.sqrt(noisePower) * (Math.random() * 2 - 1));\n    const noisyData = new Float32Array(channelData.length);\n    for (let i = 0; i < channelData.length; i++) {\n      noisyData[i] = channelData[i] + noise[i];\n    }\n    const noisyBuffer = audioContextRef.current.createBuffer(1, noisyData.length, buffer.sampleRate);\n    noisyBuffer.copyToChannel(noisyData, 0);\n    return noisyBuffer;\n  };\n  const applyBandpassFilter = (buffer, filterLength, passbandStart, passbandEnd, sampleRate) => {\n    const nyquist = sampleRate / 2;\n    const normalPassbandStart = passbandStart / nyquist;\n    const normalPassbandEnd = passbandEnd / nyquist;\n    const taps = new Float32Array(filterLength);\n    for (let i = 0; i < filterLength; i++) {\n      const m = i - (filterLength - 1) / 2;\n      if (m === 0) {\n        taps[i] = 2 * (normalPassbandEnd - normalPassbandStart);\n      } else {\n        taps[i] = (Math.sin(2 * Math.PI * normalPassbandEnd * m) - Math.sin(2 * Math.PI * normalPassbandStart * m)) / (Math.PI * m);\n        taps[i] *= 0.54 - 0.46 * Math.cos(2 * Math.PI * i / (filterLength - 1)); // Hamming window\n      }\n    }\n    const filteredData = new Float32Array(buffer.length);\n    const channelData = buffer.getChannelData(0);\n    for (let i = 0; i < buffer.length; i++) {\n      let sum = 0;\n      for (let j = 0; j < filterLength; j++) {\n        if (i - j >= 0) {\n          sum += channelData[i - j] * taps[j];\n        }\n      }\n      filteredData[i] = sum;\n    }\n    const filteredBuffer = audioContextRef.current.createBuffer(1, filteredData.length, buffer.sampleRate);\n    filteredBuffer.copyToChannel(filteredData, 0);\n    return filteredBuffer;\n  };\n  const applyAdaptiveFilter = (buffer, filterLength, sampleRate) => {\n    const channelData = buffer.getChannelData(0);\n    const desiredSignal = channelData.slice(); // 假设理想信号已知或近似为无噪声信号\n    const filteredData = new Float32Array(channelData.length);\n    const filterWeights = new Float32Array(filterLength).fill(0);\n    const stepSize = 0.05; // 步长因子，控制滤波器调整速度\n\n    for (let i = 0; i < channelData.length - filterLength; i++) {\n      const x = channelData.slice(i, i + filterLength);\n      const y = filterWeights.reduce((sum, weight, j) => sum + weight * x[j], 0);\n      const e = desiredSignal[i] - y;\n      for (let j = 0; j < filterLength; j++) {\n        filterWeights[j] += stepSize * e * x[j];\n      }\n      filteredData[i] = y;\n    }\n    const filteredBuffer = audioContextRef.current.createBuffer(1, filteredData.length, buffer.sampleRate);\n    filteredBuffer.copyToChannel(filteredData, 0);\n    return filteredBuffer;\n  };\n  const bufferToWave = (buffer, len) => {\n    const numOfChan = buffer.numberOfChannels;\n    const length = len * numOfChan * 2 + 44;\n    const bufferArray = new ArrayBuffer(length);\n    const view = new DataView(bufferArray);\n    const channels = [];\n    let sample;\n    let offset = 0;\n    let pos = 0;\n    const setUint16 = data => {\n      view.setUint16(pos, data, true);\n      pos += 2;\n    };\n    const setUint32 = data => {\n      view.setUint32(pos, data, true);\n      pos += 4;\n    };\n    const writeString = str => {\n      for (let i = 0; i < str.length; i++) {\n        view.setUint8(pos++, str.charCodeAt(i));\n      }\n    };\n    writeString('RIFF'); // ChunkID\n    setUint32(length - 8); // ChunkSize\n    writeString('WAVE'); // Format\n    writeString('fmt '); // Subchunk1ID\n    setUint32(16); // Subchunk1Size\n    setUint16(1); // AudioFormat (PCM)\n    setUint16(numOfChan); // NumChannels\n    setUint32(buffer.sampleRate); // SampleRate\n    setUint32(buffer.sampleRate * 2 * numOfChan); // ByteRate\n    setUint16(numOfChan * 2); // BlockAlign\n    setUint16(16); // BitsPerSample\n    writeString('data'); // Subchunk2ID\n    setUint32(length - pos - 4); // Subchunk2Size\n\n    for (let i = 0; i < buffer.numberOfChannels; i++) {\n      channels.push(buffer.getChannelData(i));\n    }\n    while (offset < len) {\n      for (let i = 0; i < numOfChan; i++) {\n        sample = Math.max(-1, Math.min(1, channels[i][offset])); // Clamp sample to range [-1, 1]\n        sample = (sample < 0 ? sample * 32768 : sample * 32767) | 0; // Convert to 16-bit PCM\n        view.setInt16(pos, sample, true); // Write sample to DataView\n        pos += 2;\n      }\n      offset++;\n    }\n    const blob = new Blob([bufferArray], {\n      type: 'audio/wav'\n    });\n    return blob;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"\\u8F93\\u5165\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: recording ? stopRecording : startRecording,\n        children: recording ? '停止录音' : '开始录音'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        children: [\"\\u5BFC\\u5165\\u97F3\\u9891\", /*#__PURE__*/_jsxDEV(HiddenInput, {\n          type: \"file\",\n          accept: \"audio/*\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), audioURL && /*#__PURE__*/_jsxDEV(AudioContainer, {\n        children: [/*#__PURE__*/_jsxDEV(AudioTitle, {\n          children: \"\\u539F\\u59CB\\u97F3\\u9891\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: audioURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"\\u566A\\u58F0\\u4E0E\\u6EE4\\u6CE2\\u5668\\u8BBE\\u7F6E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: [\"\\u4FE1\\u566A\\u6BD4 (dB):\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          value: snr,\n          onChange: e => setSnr(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: [\"\\u6EE4\\u6CE2\\u5668\\u957F\\u5EA6:\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          value: filterLength,\n          onChange: e => setFilterLength(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: [\"\\u6700\\u4F4E\\u9891\\u7387 (Hz):\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          value: lowFreq,\n          onChange: e => setLowFreq(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: [\"\\u6700\\u9AD8\\u9891\\u7387 (Hz):\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          value: highFreq,\n          onChange: e => setHighFreq(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: [\"\\u6EE4\\u6CE2\\u5668\\u7C7B\\u578B:\", /*#__PURE__*/_jsxDEV(Select, {\n          value: filterType,\n          onChange: e => setFilterType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bandpass\",\n            children: \"\\u5E26\\u901A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"adaptive\",\n            children: \"\\u81EA\\u9002\\u5E94\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addNoiseAndFilter,\n        children: \"\\u5904\\u7406\\u97F3\\u9891\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"\\u5904\\u7406\\u540E\\u97F3\\u9891\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), noisyAudioURL && /*#__PURE__*/_jsxDEV(AudioContainer, {\n        children: [/*#__PURE__*/_jsxDEV(AudioTitle, {\n          children: \"\\u52A0\\u566A\\u540E\\u97F3\\u9891\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: noisyAudioURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 13\n      }, this), filteredAudioURL && /*#__PURE__*/_jsxDEV(AudioContainer, {\n        children: [/*#__PURE__*/_jsxDEV(AudioTitle, {\n          children: \"\\u964D\\u566A\\u540E\\u97F3\\u9891\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: filteredAudioURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioProcessor, \"pZIaUs70xNTjo72M4+t3/JsCf+A=\");\n_c13 = AudioProcessor;\nexport default AudioProcessor;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Section\");\n$RefreshReg$(_c3, \"SectionTitle\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"InputLabel\");\n$RefreshReg$(_c6, \"Label\");\n$RefreshReg$(_c7, \"HiddenInput\");\n$RefreshReg$(_c8, \"AudioContainer\");\n$RefreshReg$(_c9, \"AudioTitle\");\n$RefreshReg$(_c10, \"Loader\");\n$RefreshReg$(_c11, \"Select\");\n$RefreshReg$(_c12, \"Input\");\n$RefreshReg$(_c13, \"AudioProcessor\");","map":{"version":3,"names":["React","useState","useRef","styled","jsxDEV","_jsxDEV","Container","div","_c","Section","_c2","SectionTitle","h2","_c3","Button","button","_c4","InputLabel","label","_c5","Label","_c6","HiddenInput","input","_c7","AudioContainer","_c8","AudioTitle","_c9","Loader","_c10","Select","select","_c11","Input","_c12","AudioProcessor","_s","recording","setRecording","loading","setLoading","audioURL","setAudioURL","noisyAudioURL","setNoisyAudioURL","filteredAudioURL","setFilteredAudioURL","audioContextRef","window","AudioContext","webkitAudioContext","mediaRecorderRef","audioChunksRef","snr","setSnr","filterLength","setFilterLength","lowFreq","setLowFreq","highFreq","setHighFreq","filterType","setFilterType","startRecording","current","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","ondataavailable","event","push","data","onstop","processAudio","start","stopRecording","stop","audioBlob","Blob","type","audioUrl","URL","createObjectURL","handleFileUpload","file","target","files","addNoiseAndFilter","audioBuffer","fetch","response","arrayBuffer","decodeAudioData","noisyBuffer","addGaussianNoise","filteredBuffer","applyAdaptiveFilter","sampleRate","applyBandpassFilter","bufferToWave","length","error","console","buffer","channelData","getChannelData","signalPower","reduce","acc","val","noisePower","Math","pow","noise","Float32Array","map","sqrt","random","noisyData","i","createBuffer","copyToChannel","passbandStart","passbandEnd","nyquist","normalPassbandStart","normalPassbandEnd","taps","m","sin","PI","cos","filteredData","sum","j","desiredSignal","slice","filterWeights","fill","stepSize","x","y","weight","e","len","numOfChan","numberOfChannels","bufferArray","ArrayBuffer","view","DataView","channels","sample","offset","pos","setUint16","setUint32","writeString","str","setUint8","charCodeAt","max","min","setInt16","blob","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","accept","onChange","controls","src","value","_c13","$RefreshReg$"],"sources":["/Users/king/Documents/GitHub/fir-filter/src/AudioProcessor.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 20px;\n`;\n\nconst Section = styled.div`\n  width: 80%;\n  margin: 20px 0;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n`;\n\nconst SectionTitle = styled.h2`\n  margin-bottom: 10px;\n  font-size: 24px;\n`;\n\nconst Button = styled.button`\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n\nconst InputLabel = styled.label`\n  display: inline-block;\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #008cba;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #007bb5;\n  }\n`;\n\nconst Label = styled.label`\n  font-size: 16px;\n  padding: 10px 20px;\n`;\n\nconst HiddenInput = styled.input`\n  display: none;\n`;\n\nconst AudioContainer = styled.div`\n  margin: 20px 0;\n  text-align: center;\n`;\n\nconst AudioTitle = styled.h2`\n  font-size: 18px;\n  margin: 10px 0;\n`;\n\nconst Loader = styled.div`\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #3498db;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 2s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst Select = styled.select`\n  padding: 10px;\n  margin: 10px;\n  font-size: 16px;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  margin: 10px;\n  font-size: 16px;\n`;\n\nconst AudioProcessor = () => {\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [audioURL, setAudioURL] = useState('');\n  const [noisyAudioURL, setNoisyAudioURL] = useState('');\n  const [filteredAudioURL, setFilteredAudioURL] = useState('');\n  const audioContextRef = useRef(new (window.AudioContext || window.webkitAudioContext)());\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const [snr, setSnr] = useState(20);\n  const [filterLength, setFilterLength] = useState(127);\n  const [lowFreq, setLowFreq] = useState(300);\n  const [highFreq, setHighFreq] = useState(3400);\n  const [filterType, setFilterType] = useState('bandpass');\n\n  const startRecording = () => {\n    setRecording(true);\n    audioChunksRef.current = [];\n    navigator.mediaDevices.getUserMedia({ audio: true }).then(stream => {\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = processAudio;\n      mediaRecorderRef.current.start();\n    });\n  };\n\n  const stopRecording = () => {\n    setRecording(false);\n    mediaRecorderRef.current.stop();\n  };\n\n  const processAudio = () => {\n    setLoading(true);\n    const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n    const audioUrl = URL.createObjectURL(audioBlob);\n    setAudioURL(audioUrl);\n    setLoading(false);\n  };\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const audioUrl = URL.createObjectURL(file);\n      setAudioURL(audioUrl);\n    }\n  };\n\n  const addNoiseAndFilter = async () => {\n    try {\n      setLoading(true);\n      const audioBuffer = await fetch(audioURL)\n        .then(response => response.arrayBuffer())\n        .then(arrayBuffer => audioContextRef.current.decodeAudioData(arrayBuffer));\n\n      const noisyBuffer = addGaussianNoise(audioBuffer, snr);\n      let filteredBuffer;\n      if (filterType === 'adaptive') {\n        filteredBuffer = applyAdaptiveFilter(noisyBuffer, filterLength, audioBuffer.sampleRate);\n      } else {\n        filteredBuffer = applyBandpassFilter(noisyBuffer, filterLength, lowFreq, highFreq, audioBuffer.sampleRate);\n      }\n\n      setNoisyAudioURL(URL.createObjectURL(bufferToWave(noisyBuffer, noisyBuffer.length)));\n      setFilteredAudioURL(URL.createObjectURL(bufferToWave(filteredBuffer, filteredBuffer.length)));\n    } catch (error) {\n      console.error('Error processing audio:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addGaussianNoise = (buffer, snr) => {\n    const channelData = buffer.getChannelData(0);\n    const signalPower = channelData.reduce((acc, val) => acc + val * val, 0) / channelData.length;\n    const noisePower = signalPower / Math.pow(10, snr / 10);\n    const noise = new Float32Array(channelData.length).map(() => Math.sqrt(noisePower) * (Math.random() * 2 - 1));\n    const noisyData = new Float32Array(channelData.length);\n    for (let i = 0; i < channelData.length; i++) {\n      noisyData[i] = channelData[i] + noise[i];\n    }\n    const noisyBuffer = audioContextRef.current.createBuffer(1, noisyData.length, buffer.sampleRate);\n    noisyBuffer.copyToChannel(noisyData, 0);\n    return noisyBuffer;\n  };\n\n  const applyBandpassFilter = (buffer, filterLength, passbandStart, passbandEnd, sampleRate) => {\n    const nyquist = sampleRate / 2;\n    const normalPassbandStart = passbandStart / nyquist;\n    const normalPassbandEnd = passbandEnd / nyquist;\n    const taps = new Float32Array(filterLength);\n\n    for (let i = 0; i < filterLength; i++) {\n      const m = i - (filterLength - 1) / 2;\n      if (m === 0) {\n        taps[i] = 2 * (normalPassbandEnd - normalPassbandStart);\n      } else {\n        taps[i] = (Math.sin(2 * Math.PI * normalPassbandEnd * m) - Math.sin(2 * Math.PI * normalPassbandStart * m)) / (Math.PI * m);\n        taps[i] *= 0.54 - 0.46 * Math.cos(2 * Math.PI * i / (filterLength - 1)); // Hamming window\n      }\n    }\n\n    const filteredData = new Float32Array(buffer.length);\n    const channelData = buffer.getChannelData(0);\n    for (let i = 0; i < buffer.length; i++) {\n      let sum = 0;\n      for (let j = 0; j < filterLength; j++) {\n        if (i - j >= 0) {\n          sum += channelData[i - j] * taps[j];\n        }\n      }\n      filteredData[i] = sum;\n    }\n\n    const filteredBuffer = audioContextRef.current.createBuffer(1, filteredData.length, buffer.sampleRate);\n    filteredBuffer.copyToChannel(filteredData, 0);\n    return filteredBuffer;\n  };\n\n  const applyAdaptiveFilter = (buffer, filterLength, sampleRate) => {\n    const channelData = buffer.getChannelData(0);\n    const desiredSignal = channelData.slice(); // 假设理想信号已知或近似为无噪声信号\n    const filteredData = new Float32Array(channelData.length);\n    const filterWeights = new Float32Array(filterLength).fill(0);\n    const stepSize = 0.05; // 步长因子，控制滤波器调整速度\n\n    for (let i = 0; i < channelData.length - filterLength; i++) {\n      const x = channelData.slice(i, i + filterLength);\n      const y = filterWeights.reduce((sum, weight, j) => sum + weight * x[j], 0);\n      const e = desiredSignal[i] - y;\n\n      for (let j = 0; j < filterLength; j++) {\n        filterWeights[j] += stepSize * e * x[j];\n      }\n\n      filteredData[i] = y;\n    }\n\n    const filteredBuffer = audioContextRef.current.createBuffer(1, filteredData.length, buffer.sampleRate);\n    filteredBuffer.copyToChannel(filteredData, 0);\n    return filteredBuffer;\n  };\n\n  const bufferToWave = (buffer, len) => {\n    const numOfChan = buffer.numberOfChannels;\n    const length = len * numOfChan * 2 + 44;\n    const bufferArray = new ArrayBuffer(length);\n    const view = new DataView(bufferArray);\n    const channels = [];\n    let sample;\n    let offset = 0;\n    let pos = 0;\n  \n    const setUint16 = (data) => {\n      view.setUint16(pos, data, true);\n      pos += 2;\n    };\n  \n    const setUint32 = (data) => {\n      view.setUint32(pos, data, true);\n      pos += 4;\n    };\n  \n    const writeString = (str) => {\n      for (let i = 0; i < str.length; i++) {\n        view.setUint8(pos++, str.charCodeAt(i));\n      }\n    };\n  \n    writeString('RIFF');             // ChunkID\n    setUint32(length - 8);           // ChunkSize\n    writeString('WAVE');             // Format\n    writeString('fmt ');             // Subchunk1ID\n    setUint32(16);                   // Subchunk1Size\n    setUint16(1);                    // AudioFormat (PCM)\n    setUint16(numOfChan);            // NumChannels\n    setUint32(buffer.sampleRate);    // SampleRate\n    setUint32(buffer.sampleRate * 2 * numOfChan); // ByteRate\n    setUint16(numOfChan * 2);        // BlockAlign\n    setUint16(16);                   // BitsPerSample\n    writeString('data');             // Subchunk2ID\n    setUint32(length - pos - 4);     // Subchunk2Size\n  \n    for (let i = 0; i < buffer.numberOfChannels; i++) {\n      channels.push(buffer.getChannelData(i));\n    }\n  \n    while (offset < len) {\n      for (let i = 0; i < numOfChan; i++) {\n        sample = Math.max(-1, Math.min(1, channels[i][offset])); // Clamp sample to range [-1, 1]\n        sample = (sample < 0 ? sample * 32768 : sample * 32767) | 0; // Convert to 16-bit PCM\n        view.setInt16(pos, sample, true); // Write sample to DataView\n        pos += 2;\n      }\n      offset++;\n    }\n  \n    const blob = new Blob([bufferArray], { type: 'audio/wav' });\n    return blob;\n  };\n  \n\n  return (\n    <Container>\n      <Section>\n        <SectionTitle>输入</SectionTitle>\n        <Button onClick={recording ? stopRecording : startRecording}>\n          {recording ? '停止录音' : '开始录音'}\n        </Button>\n        <InputLabel>\n          导入音频\n          <HiddenInput type=\"file\" accept=\"audio/*\" onChange={handleFileUpload} />\n        </InputLabel>\n        {audioURL && (\n          <AudioContainer>\n            <AudioTitle>原始音频</AudioTitle>\n            <audio controls src={audioURL} />\n          </AudioContainer>\n        )}\n      </Section>\n      <Section>\n        <SectionTitle>噪声与滤波器设置</SectionTitle>\n        <Label>\n          信噪比 (dB):\n          <Input type=\"number\" value={snr} onChange={(e) => setSnr(e.target.value)} />\n        </Label>\n        <Label>\n          滤波器长度:\n          <Input type=\"number\" value={filterLength} onChange={(e) => setFilterLength(e.target.value)} />\n        </Label>\n        <Label>\n          最低频率 (Hz):\n          <Input type=\"number\" value={lowFreq} onChange={(e) => setLowFreq(e.target.value)} />\n        </Label>\n        <Label>\n          最高频率 (Hz):\n          <Input type=\"number\" value={highFreq} onChange={(e) => setHighFreq(e.target.value)} />\n        </Label>\n        <Label>\n          滤波器类型:\n          <Select value={filterType} onChange={(e) => setFilterType(e.target.value)}>\n            <option value=\"bandpass\">带通</option>\n            <option value=\"adaptive\">自适应</option>\n          </Select>\n        </Label>\n        <Button onClick={addNoiseAndFilter}>处理音频</Button>\n      </Section>\n      {loading && <Loader />}\n      <Section>\n        <SectionTitle>处理后音频</SectionTitle>\n          {noisyAudioURL && (\n            <AudioContainer>\n              <AudioTitle>加噪后音频</AudioTitle>\n              <audio controls src={noisyAudioURL} />\n            </AudioContainer>\n          )}\n          {filteredAudioURL && (\n            <AudioContainer>\n              <AudioTitle>降噪后音频</AudioTitle>\n              <audio controls src={filteredAudioURL} />\n            </AudioContainer>\n          )}\n      </Section>\n    </Container>\n  );\n};\n\nexport default AudioProcessor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}