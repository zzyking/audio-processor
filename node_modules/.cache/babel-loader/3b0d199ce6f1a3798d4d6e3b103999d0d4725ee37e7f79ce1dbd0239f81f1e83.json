{"ast":null,"code":"var _jsxFileName = \"/Users/king/Documents/GitHub/fir-filter/src/AudioProcessor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 20px;\n`;\n_c = Container;\nconst Section = styled.div`\n  width: 80%;\n  margin: 20px 0;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n`;\n_c2 = Section;\nconst SectionTitle = styled.h2`\n  margin-bottom: 10px;\n  font-size: 24px;\n`;\n_c3 = SectionTitle;\nconst Button = styled.button`\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n_c4 = Button;\nconst InputLabel = styled.label`\n  display: inline-block;\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #008cba;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #007bb5;\n  }\n`;\n_c5 = InputLabel;\nconst Label = styled.label`\n  font-size: 16px;\n  padding: 10px 20px;\n`;\n_c6 = Label;\nconst HiddenInput = styled.input`\n  display: none;\n`;\n_c7 = HiddenInput;\nconst AudioContainer = styled.div`\n  margin: 20px 0;\n  text-align: center;\n`;\n_c8 = AudioContainer;\nconst AudioTitle = styled.h2`\n  font-size: 18px;\n  margin: 10px 0;\n`;\n_c9 = AudioTitle;\nconst Loader = styled.div`\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #3498db;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 2s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n_c10 = Loader;\nconst Select = styled.select`\n  padding: 10px;\n  margin: 10px;\n  font-size: 16px;\n`;\n_c11 = Select;\nconst Input = styled.input`\n  padding: 10px;\n  margin: 10px;\n  font-size: 16px;\n  width: 100px;\n`;\n_c12 = Input;\nconst AudioProcessor = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [audioURL, setAudioURL] = useState('');\n  const [noisyAudioURL, setNoisyAudioURL] = useState('');\n  const [filteredAudioURL, setFilteredAudioURL] = useState('');\n  const audioContextRef = useRef(new (window.AudioContext || window.webkitAudioContext)());\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const [snr, setSnr] = useState(20);\n  const [filterLength, setFilterLength] = useState(127);\n  const [lowFreq, setLowFreq] = useState(4000);\n  const [highFreq, setHighFreq] = useState(4500);\n  const startRecording = () => {\n    setRecording(true);\n    audioChunksRef.current = [];\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = processAudio;\n      mediaRecorderRef.current.start();\n    });\n  };\n  const stopRecording = () => {\n    setRecording(false);\n    mediaRecorderRef.current.stop();\n  };\n  const processAudio = () => {\n    setLoading(true);\n    const audioBlob = new Blob(audioChunksRef.current, {\n      type: 'audio/wav'\n    });\n    const audioUrl = URL.createObjectURL(audioBlob);\n    setAudioURL(audioUrl);\n    setLoading(false);\n  };\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const audioUrl = URL.createObjectURL(file);\n      setAudioURL(audioUrl);\n    }\n  };\n  const addNoiseAndFilter = async () => {\n    try {\n      setLoading(true);\n      const audioBuffer = await fetch(audioURL).then(response => response.arrayBuffer()).then(arrayBuffer => audioContextRef.current.decodeAudioData(arrayBuffer));\n      const noisyBuffer = addGaussianNoise(audioBuffer, snr);\n      const filteredBuffer = applyBandpassFilter(noisyBuffer, filterLength, lowFreq, highFreq, audioBuffer.sampleRate);\n      setNoisyAudioURL(URL.createObjectURL(bufferToWave(noisyBuffer, noisyBuffer.length)));\n      setFilteredAudioURL(URL.createObjectURL(bufferToWave(filteredBuffer, filteredBuffer.length)));\n    } catch (error) {\n      console.error('Error processing audio:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addGaussianNoise = (buffer, snr) => {\n    const channelData = buffer.getChannelData(0);\n    const signalPower = channelData.reduce((acc, val) => acc + val * val, 0) / channelData.length;\n    const noisePower = signalPower / Math.pow(10, snr / 10);\n    const noise = new Float32Array(channelData.length).map(() => Math.sqrt(noisePower) * (Math.random() * 2 - 1));\n    const noisyData = new Float32Array(channelData.length);\n    for (let i = 0; i < channelData.length; i++) {\n      noisyData[i] = channelData[i] + noise[i];\n    }\n    const noisyBuffer = audioContextRef.current.createBuffer(1, noisyData.length, buffer.sampleRate);\n    noisyBuffer.copyToChannel(noisyData, 0);\n    return noisyBuffer;\n  };\n  const applyBandpassFilter = (buffer, filterLength, passbandStart, passbandEnd, sampleRate) => {\n    const nyquist = sampleRate / 2;\n    const normalPassbandStart = passbandStart / nyquist;\n    const normalPassbandEnd = passbandEnd / nyquist;\n    const taps = new Float32Array(filterLength);\n    for (let i = 0; i < filterLength; i++) {\n      const m = i - (filterLength - 1) / 2;\n      if (m === 0) {\n        taps[i] = 2 * (normalPassbandEnd - normalPassbandStart);\n      } else {\n        taps[i] = (Math.sin(2 * Math.PI * normalPassbandEnd * m) - Math.sin(2 * Math.PI * normalPassbandStart * m)) / (Math.PI * m);\n        taps[i] *= 0.54 - 0.46 * Math.cos(2 * Math.PI * i / (filterLength - 1)); // Hamming window\n      }\n    }\n    const filteredData = new Float32Array(buffer.length);\n    const channelData = buffer.getChannelData(0);\n    for (let i = 0; i < buffer.length; i++) {\n      let sum = 0;\n      for (let j = 0; j < filterLength; j++) {\n        if (i - j >= 0) {\n          sum += channelData[i - j] * taps[j];\n        }\n      }\n      filteredData[i] = sum;\n    }\n    const filteredBuffer = audioContextRef.current.createBuffer(1, filteredData.length, buffer.sampleRate);\n    filteredBuffer.copyToChannel(filteredData, 0);\n    return filteredBuffer;\n  };\n  const bufferToWave = (buffer, length) => {\n    const numOfChannels = buffer.numberOfChannels;\n    const sampleRate = buffer.sampleRate;\n    const bufferLength = length * numOfChannels * 2 + 44;\n    const bufferResult = new ArrayBuffer(bufferLength);\n    const view = new DataView(bufferResult);\n    const channels = [];\n    let offset = 0;\n    const writeString = (str, offset) => {\n      for (let i = 0; i < str.length; i++) {\n        view.setUint8(offset + i, str.charCodeAt(i));\n      }\n    };\n    const write16Bit = (val, offset) => {\n      view.setInt16(offset, val, true);\n    };\n    const write32Bit = (val, offset) => {\n      view.setInt32(offset, val, true);\n    };\n\n    // RIFF chunk descriptor\n    writeString('RIFF', offset);\n    offset += 4;\n    write32Bit(bufferLength - 8, offset);\n    offset += 4;\n    writeString('WAVE', offset);\n    offset += 4;\n\n    // FMT sub-chunk\n    writeString('fmt ', offset);\n    offset += 4;\n    write32Bit(16, offset);\n    offset += 4;\n    write16Bit(1, offset);\n    offset += 2;\n    write16Bit(numOfChannels, offset);\n    offset += 2;\n    write32Bit(sampleRate, offset);\n    offset += 4;\n    write32Bit(sampleRate * numOfChannels * 2, offset);\n    offset += 4;\n    write16Bit(numOfChannels * 2, offset);\n    offset += 2;\n    write16Bit(16, offset);\n    offset += 2;\n\n    // Data sub-chunk\n    writeString('data', offset);\n    offset += 4;\n    write32Bit(bufferLength - 44, offset);\n    offset += 4;\n\n    // Write actual audio data\n    for (let i = 0; i < numOfChannels; i++) {\n      channels.push(buffer.getChannelData(i));\n    }\n    let pos = 0;\n    while (pos < length) {\n      for (let i = 0; i < numOfChannels; i++) {\n        const sample = Math.max(-1, Math.min(1, channels[i][pos])); // clamp sample to [-1, 1]\n        view.setInt16(44 + pos * 2 * numOfChannels + i * 2, sample < 0 ? sample * 0x8000 : sample * 0x7FFF, true);\n      }\n      pos++;\n    }\n    return new Blob([view], {\n      type: 'audio/wav'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"\\u8F93\\u5165\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: recording ? stopRecording : startRecording,\n        children: recording ? '停止录音' : '开始录音'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        children: [\"\\u5BFC\\u5165\\u97F3\\u9891\", /*#__PURE__*/_jsxDEV(HiddenInput, {\n          type: \"file\",\n          accept: \"audio/*\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), audioURL && /*#__PURE__*/_jsxDEV(AudioContainer, {\n        children: [/*#__PURE__*/_jsxDEV(AudioTitle, {\n          children: \"\\u5F55\\u97F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: audioURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"\\u52A0\\u566A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: [\"\\u4FE1\\u566A\\u6BD4 (dB):\", /*#__PURE__*/_jsxDEV(Select, {\n          value: snr,\n          onChange: e => setSnr(e.target.value),\n          children: [5, 10, 15, 20, 25, 30].map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: value,\n            children: value\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: [\"\\u6700\\u4F4E\\u9891\\u7387 (Hz):\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          value: lowFreq,\n          onChange: e => setLowFreq(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: [\"\\u6700\\u9AD8\\u9891\\u7387 (Hz):\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          value: highFreq,\n          onChange: e => setHighFreq(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: [\"\\u6EE4\\u6CE2\\u5668\\u957F\\u5EA6:\", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          value: filterLength,\n          onChange: e => setFilterLength(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addNoiseAndFilter,\n        children: \"\\u52A0\\u566A\\u5E76\\u964D\\u566A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }, this), noisyAudioURL && /*#__PURE__*/_jsxDEV(AudioContainer, {\n        children: [/*#__PURE__*/_jsxDEV(AudioTitle, {\n          children: \"\\u52A0\\u566A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: noisyAudioURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this), filteredAudioURL && /*#__PURE__*/_jsxDEV(AudioContainer, {\n        children: [/*#__PURE__*/_jsxDEV(AudioTitle, {\n          children: \"\\u964D\\u566A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: filteredAudioURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioProcessor, \"6r3sWzIsSNIVOVtoA7Kfoju9Myc=\");\n_c13 = AudioProcessor;\nexport default AudioProcessor;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Section\");\n$RefreshReg$(_c3, \"SectionTitle\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"InputLabel\");\n$RefreshReg$(_c6, \"Label\");\n$RefreshReg$(_c7, \"HiddenInput\");\n$RefreshReg$(_c8, \"AudioContainer\");\n$RefreshReg$(_c9, \"AudioTitle\");\n$RefreshReg$(_c10, \"Loader\");\n$RefreshReg$(_c11, \"Select\");\n$RefreshReg$(_c12, \"Input\");\n$RefreshReg$(_c13, \"AudioProcessor\");","map":{"version":3,"names":["React","useState","useRef","styled","jsxDEV","_jsxDEV","Container","div","_c","Section","_c2","SectionTitle","h2","_c3","Button","button","_c4","InputLabel","label","_c5","Label","_c6","HiddenInput","input","_c7","AudioContainer","_c8","AudioTitle","_c9","Loader","_c10","Select","select","_c11","Input","_c12","AudioProcessor","_s","recording","setRecording","loading","setLoading","audioURL","setAudioURL","noisyAudioURL","setNoisyAudioURL","filteredAudioURL","setFilteredAudioURL","audioContextRef","window","AudioContext","webkitAudioContext","mediaRecorderRef","audioChunksRef","snr","setSnr","filterLength","setFilterLength","lowFreq","setLowFreq","highFreq","setHighFreq","startRecording","current","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","ondataavailable","event","push","data","onstop","processAudio","start","stopRecording","stop","audioBlob","Blob","type","audioUrl","URL","createObjectURL","handleFileUpload","file","target","files","addNoiseAndFilter","audioBuffer","fetch","response","arrayBuffer","decodeAudioData","noisyBuffer","addGaussianNoise","filteredBuffer","applyBandpassFilter","sampleRate","bufferToWave","length","error","console","buffer","channelData","getChannelData","signalPower","reduce","acc","val","noisePower","Math","pow","noise","Float32Array","map","sqrt","random","noisyData","i","createBuffer","copyToChannel","passbandStart","passbandEnd","nyquist","normalPassbandStart","normalPassbandEnd","taps","m","sin","PI","cos","filteredData","sum","j","numOfChannels","numberOfChannels","bufferLength","bufferResult","ArrayBuffer","view","DataView","channels","offset","writeString","str","setUint8","charCodeAt","write16Bit","setInt16","write32Bit","setInt32","pos","sample","max","min","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","accept","onChange","controls","src","value","e","_c13","$RefreshReg$"],"sources":["/Users/king/Documents/GitHub/fir-filter/src/AudioProcessor.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 20px;\n`;\n\nconst Section = styled.div`\n  width: 80%;\n  margin: 20px 0;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n`;\n\nconst SectionTitle = styled.h2`\n  margin-bottom: 10px;\n  font-size: 24px;\n`;\n\nconst Button = styled.button`\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n\nconst InputLabel = styled.label`\n  display: inline-block;\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #008cba;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #007bb5;\n  }\n`;\n\nconst Label = styled.label`\n  font-size: 16px;\n  padding: 10px 20px;\n`;\n\nconst HiddenInput = styled.input`\n  display: none;\n`;\n\nconst AudioContainer = styled.div`\n  margin: 20px 0;\n  text-align: center;\n`;\n\nconst AudioTitle = styled.h2`\n  font-size: 18px;\n  margin: 10px 0;\n`;\n\nconst Loader = styled.div`\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #3498db;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 2s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst Select = styled.select`\n  padding: 10px;\n  margin: 10px;\n  font-size: 16px;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  margin: 10px;\n  font-size: 16px;\n  width: 100px;\n`;\n\nconst AudioProcessor = () => {\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [audioURL, setAudioURL] = useState('');\n  const [noisyAudioURL, setNoisyAudioURL] = useState('');\n  const [filteredAudioURL, setFilteredAudioURL] = useState('');\n  const audioContextRef = useRef(new (window.AudioContext || window.webkitAudioContext)());\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const [snr, setSnr] = useState(20);\n  const [filterLength, setFilterLength] = useState(127);\n  const [lowFreq, setLowFreq] = useState(4000);\n  const [highFreq, setHighFreq] = useState(4500);\n\n  const startRecording = () => {\n    setRecording(true);\n    audioChunksRef.current = [];\n    navigator.mediaDevices.getUserMedia({ audio: true }).then(stream => {\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = processAudio;\n      mediaRecorderRef.current.start();\n    });\n  };\n\n  const stopRecording = () => {\n    setRecording(false);\n    mediaRecorderRef.current.stop();\n  };\n\n  const processAudio = () => {\n    setLoading(true);\n    const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n    const audioUrl = URL.createObjectURL(audioBlob);\n    setAudioURL(audioUrl);\n    setLoading(false);\n  };\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const audioUrl = URL.createObjectURL(file);\n      setAudioURL(audioUrl);\n    }\n  };\n\n  const addNoiseAndFilter = async () => {\n    try {\n      setLoading(true);\n      const audioBuffer = await fetch(audioURL)\n        .then(response => response.arrayBuffer())\n        .then(arrayBuffer => audioContextRef.current.decodeAudioData(arrayBuffer));\n\n      const noisyBuffer = addGaussianNoise(audioBuffer, snr);\n      const filteredBuffer = applyBandpassFilter(noisyBuffer, filterLength, lowFreq, highFreq, audioBuffer.sampleRate);\n      setNoisyAudioURL(URL.createObjectURL(bufferToWave(noisyBuffer, noisyBuffer.length)));\n      setFilteredAudioURL(URL.createObjectURL(bufferToWave(filteredBuffer, filteredBuffer.length)));\n    } catch (error) {\n      console.error('Error processing audio:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addGaussianNoise = (buffer, snr) => {\n    const channelData = buffer.getChannelData(0);\n    const signalPower = channelData.reduce((acc, val) => acc + val * val, 0) / channelData.length;\n    const noisePower = signalPower / Math.pow(10, snr / 10);\n    const noise = new Float32Array(channelData.length).map(() => Math.sqrt(noisePower) * (Math.random() * 2 - 1));\n    const noisyData = new Float32Array(channelData.length);\n    for (let i = 0; i < channelData.length; i++) {\n      noisyData[i] = channelData[i] + noise[i];\n    }\n    const noisyBuffer = audioContextRef.current.createBuffer(1, noisyData.length, buffer.sampleRate);\n    noisyBuffer.copyToChannel(noisyData, 0);\n    return noisyBuffer;\n  };\n\n  const applyBandpassFilter = (buffer, filterLength, passbandStart, passbandEnd, sampleRate) => {\n    const nyquist = sampleRate / 2;\n    const normalPassbandStart = passbandStart / nyquist;\n    const normalPassbandEnd = passbandEnd / nyquist;\n    const taps = new Float32Array(filterLength);\n\n    for (let i = 0; i < filterLength; i++) {\n      const m = i - (filterLength - 1) / 2;\n      if (m === 0) {\n        taps[i] = 2 * (normalPassbandEnd - normalPassbandStart);\n      } else {\n        taps[i] = (Math.sin(2 * Math.PI * normalPassbandEnd * m) - Math.sin(2 * Math.PI * normalPassbandStart * m)) / (Math.PI * m);\n        taps[i] *= 0.54 - 0.46 * Math.cos(2 * Math.PI * i / (filterLength - 1)); // Hamming window\n      }\n    }\n\n    const filteredData = new Float32Array(buffer.length);\n    const channelData = buffer.getChannelData(0);\n    for (let i = 0; i < buffer.length; i++) {\n      let sum = 0;\n      for (let j = 0; j < filterLength; j++) {\n        if (i - j >= 0) {\n          sum += channelData[i - j] * taps[j];\n        }\n      }\n      filteredData[i] = sum;\n    }\n\n    const filteredBuffer = audioContextRef.current.createBuffer(1, filteredData.length, buffer.sampleRate);\n    filteredBuffer.copyToChannel(filteredData, 0);\n    return filteredBuffer;\n  };\n\n  const bufferToWave = (buffer, length) => {\n    const numOfChannels = buffer.numberOfChannels;\n    const sampleRate = buffer.sampleRate;\n    const bufferLength = length * numOfChannels * 2 + 44;\n    const bufferResult = new ArrayBuffer(bufferLength);\n    const view = new DataView(bufferResult);\n    const channels = [];\n    let offset = 0;\n  \n    const writeString = (str, offset) => {\n      for (let i = 0; i < str.length; i++) {\n        view.setUint8(offset + i, str.charCodeAt(i));\n      }\n    };\n  \n    const write16Bit = (val, offset) => {\n      view.setInt16(offset, val, true);\n    };\n  \n    const write32Bit = (val, offset) => {\n      view.setInt32(offset, val, true);\n    };\n  \n    // RIFF chunk descriptor\n    writeString('RIFF', offset); offset += 4;\n    write32Bit(bufferLength - 8, offset); offset += 4;\n    writeString('WAVE', offset); offset += 4;\n  \n    // FMT sub-chunk\n    writeString('fmt ', offset); offset += 4;\n    write32Bit(16, offset); offset += 4;\n    write16Bit(1, offset); offset += 2;\n    write16Bit(numOfChannels, offset); offset += 2;\n    write32Bit(sampleRate, offset); offset += 4;\n    write32Bit(sampleRate * numOfChannels * 2, offset); offset += 4;\n    write16Bit(numOfChannels * 2, offset); offset += 2;\n    write16Bit(16, offset); offset += 2;\n  \n    // Data sub-chunk\n    writeString('data', offset); offset += 4;\n    write32Bit(bufferLength - 44, offset); offset += 4;\n  \n    // Write actual audio data\n    for (let i = 0; i < numOfChannels; i++) {\n      channels.push(buffer.getChannelData(i));\n    }\n  \n    let pos = 0;\n    while (pos < length) {\n      for (let i = 0; i < numOfChannels; i++) {\n        const sample = Math.max(-1, Math.min(1, channels[i][pos])); // clamp sample to [-1, 1]\n        view.setInt16(44 + (pos * 2 * numOfChannels) + (i * 2), sample < 0 ? sample * 0x8000 : sample * 0x7FFF, true);\n      }\n      pos++;\n    }\n  \n    return new Blob([view], { type: 'audio/wav' });\n  };\n  \n  return (\n    <Container>\n      <Section>\n        <SectionTitle>输入</SectionTitle>\n        <Button onClick={recording ? stopRecording : startRecording}>\n          {recording ? '停止录音' : '开始录音'}\n        </Button>\n        <InputLabel>\n          导入音频\n          <HiddenInput type=\"file\" accept=\"audio/*\" onChange={handleFileUpload} />\n        </InputLabel>\n        {audioURL && (\n          <AudioContainer>\n            <AudioTitle>录音</AudioTitle>\n            <audio controls src={audioURL} />\n          </AudioContainer>\n        )}\n      </Section>\n      <Section>\n        <SectionTitle>加噪</SectionTitle>\n        <Label>\n          信噪比 (dB):\n          <Select value={snr} onChange={e => setSnr(e.target.value)}>\n            {[5, 10, 15, 20, 25, 30].map(value => (\n              <option key={value} value={value}>\n                {value}\n              </option>\n            ))}\n          </Select>\n        </Label>\n        <Label>\n          最低频率 (Hz):\n          <Input type=\"number\" value={lowFreq} onChange={e => setLowFreq(e.target.value)} />\n        </Label>\n        <Label>\n          最高频率 (Hz):\n          <Input type=\"number\" value={highFreq} onChange={e => setHighFreq(e.target.value)} />\n        </Label>\n        <Label>\n          滤波器长度:\n          <Input type=\"number\" value={filterLength} onChange={e => setFilterLength(e.target.value)} />\n        </Label>\n        <Button onClick={addNoiseAndFilter}>加噪并降噪</Button>\n        {loading && <Loader />}\n        {noisyAudioURL && (\n          <AudioContainer>\n            <AudioTitle>加噪</AudioTitle>\n            <audio controls src={noisyAudioURL} />\n          </AudioContainer>\n        )}\n        {filteredAudioURL && (\n          <AudioContainer>\n            <AudioTitle>降噪</AudioTitle>\n            <audio controls src={filteredAudioURL} />\n          </AudioContainer>\n        )}\n      </Section>\n    </Container>\n  );\n};\n\nexport default AudioProcessor;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}