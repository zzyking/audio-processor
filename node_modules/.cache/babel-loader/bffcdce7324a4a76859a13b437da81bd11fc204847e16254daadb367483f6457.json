{"ast":null,"code":"var _jsxFileName = \"/Users/king/Documents/GitHub/fir-filter/src/AudioProcessor.js\",\n  _s = $RefreshSig$();\n// src/AudioProcessor.js\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 20px;\n`;\n_c = Container;\nconst Button = styled.button`\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n_c2 = Button;\nconst InputLabel = styled.label`\n  display: inline-block;\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #008cba;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #007bb5;\n  }\n`;\n_c3 = InputLabel;\nconst HiddenInput = styled.input`\n  display: none;\n`;\n_c4 = HiddenInput;\nconst AudioContainer = styled.div`\n  margin: 20px 0;\n  text-align: center;\n`;\n_c5 = AudioContainer;\nconst AudioTitle = styled.h2`\n  font-size: 18px;\n  margin: 10px 0;\n`;\n_c6 = AudioTitle;\nconst Loader = styled.div`\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #3498db;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 2s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n_c7 = Loader;\nconst Select = styled.select`\n  padding: 10px;\n  margin: 10px;\n  font-size: 16px;\n`;\n_c8 = Select;\nconst AudioProcessor = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [audioURL, setAudioURL] = useState('');\n  const [noisyAudioURL, setNoisyAudioURL] = useState('');\n  const [filteredAudioURL, setFilteredAudioURL] = useState('');\n  const audioContextRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const [snr, setSnr] = useState(20);\n  const startRecording = () => {\n    if (!audioContextRef.current) {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    }\n    setRecording(true);\n    audioChunksRef.current = [];\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = processAudio;\n      mediaRecorderRef.current.start();\n    });\n  };\n  const stopRecording = () => {\n    setRecording(false);\n    mediaRecorderRef.current.stop();\n  };\n  const processAudio = () => {\n    setLoading(true);\n    const audioBlob = new Blob(audioChunksRef.current, {\n      type: 'audio/wav'\n    });\n    const audioUrl = URL.createObjectURL(audioBlob);\n    setAudioURL(audioUrl);\n    addNoiseAndFilter(audioBlob);\n  };\n  const handleFileUpload = event => {\n    if (!audioContextRef.current) {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    }\n    const file = event.target.files[0];\n    if (file) {\n      setLoading(true);\n      const audioUrl = URL.createObjectURL(file);\n      setAudioURL(audioUrl);\n      addNoiseAndFilter(file);\n    }\n  };\n  const addNoiseAndFilter = audioBlob => {\n    const reader = new FileReader();\n    reader.readAsArrayBuffer(audioBlob);\n    reader.onloadend = () => {\n      if (!audioContextRef.current) {\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      }\n      audioContextRef.current.decodeAudioData(reader.result, buffer => {\n        const noisyBuffer = addGaussianNoise(buffer, snr);\n        const noisyBlob = bufferToBlob(noisyBuffer);\n        const noisyUrl = URL.createObjectURL(noisyBlob);\n        setNoisyAudioURL(noisyUrl);\n        const filteredBuffer = applyFIRFilter(noisyBuffer);\n        const filteredBlob = bufferToBlob(filteredBuffer);\n        const filteredUrl = URL.createObjectURL(filteredBlob);\n        setFilteredAudioURL(filteredUrl);\n        setLoading(false);\n      });\n    };\n  };\n  const addGaussianNoise = (buffer, snr) => {\n    const noisyBuffer = audioContextRef.current.createBuffer(1, buffer.length, buffer.sampleRate);\n    const channelData = buffer.getChannelData(0);\n    const noisyData = noisyBuffer.getChannelData(0);\n    const signalPower = channelData.reduce((sum, val) => sum + val * val, 0) / channelData.length;\n    const noisePower = signalPower / 10 ** (snr / 10);\n    for (let i = 0; i < channelData.length; i++) {\n      noisyData[i] = channelData[i] + (Math.random() - 0.5) * Math.sqrt(noisePower);\n    }\n    return noisyBuffer;\n  };\n  const applyFIRFilter = buffer => {\n    const filterCoeffs = calculateFIRCoefficients();\n    const input = buffer.getChannelData(0);\n    const output = new Float32Array(input.length);\n    for (let i = 0; i < input.length; i++) {\n      output[i] = 0;\n      for (let j = 0; j < filterCoeffs.length; j++) {\n        if (i - j >= 0) {\n          output[i] += input[i - j] * filterCoeffs[j];\n        }\n      }\n    }\n    const filteredBuffer = audioContextRef.current.createBuffer(1, output.length, buffer.sampleRate);\n    filteredBuffer.copyToChannel(output, 0);\n    return filteredBuffer;\n  };\n  const calculateFIRCoefficients = () => {\n    const N = 101; // 滤波器长度\n    const fc1 = 4000 / 16000; // 归一化通带边缘频率\n    const fc2 = 4500 / 16000; // 归一化阻带边缘频率\n    const h = new Float32Array(N);\n    const M = N - 1;\n    for (let n = 0; n < N; n++) {\n      if (n === M / 2) {\n        h[n] = 2 * (fc2 - fc1);\n      } else {\n        h[n] = (Math.sin(2 * Math.PI * fc2 * (n - M / 2)) - Math.sin(2 * Math.PI * fc1 * (n - M / 2))) / (Math.PI * (n - M / 2));\n      }\n      h[n] *= 0.54 - 0.46 * Math.cos(2 * Math.PI * n / M); // Hamming window\n    }\n    return h;\n  };\n  const bufferToBlob = buffer => {\n    const wavBuffer = audioBufferToWav(buffer);\n    return new Blob([new DataView(wavBuffer)], {\n      type: 'audio/wav'\n    });\n  };\n  const audioBufferToWav = buffer => {\n    const numOfChannels = buffer.numberOfChannels;\n    const length = buffer.length * numOfChannels * 2 + 44;\n    const bufferResult = new ArrayBuffer(length);\n    const view = new DataView(bufferResult);\n    let offset = 0;\n    let pos = 0;\n    const writeString = str => {\n      for (let i = 0; i < str.length; i++) {\n        view.setUint8(pos + offset, str.charCodeAt(i));\n        offset++;\n      }\n    };\n    const write16Bit = data => {\n      view.setInt16(pos + offset, data, true);\n      offset += 2;\n    };\n    const write32Bit = data => {\n      view.setInt32(pos + offset, data, true);\n      offset += 4;\n    };\n    writeString('RIFF');\n    write32Bit(length - 8);\n    writeString('WAVE');\n    writeString('fmt ');\n    write32Bit(16);\n    write16Bit(1);\n    write16Bit(numOfChannels);\n    write32Bit(buffer.sampleRate);\n    write32Bit(buffer.sampleRate * numOfChannels * 2);\n    write16Bit(numOfChannels * 2);\n    write16Bit(16);\n    writeString('data');\n    write32Bit(length - pos - 4);\n    for (let i = 0; i < buffer.length; i++) {\n      for (let channel = 0; channel < numOfChannels; channel++) {\n        const sample = Math.max(-1, Math.min(1, buffer.getChannelData(channel)[i]));\n        write16Bit(sample < 0 ? sample * 32768 : sample * 32767);\n      }\n    }\n    return bufferResult;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: recording ? stopRecording : startRecording,\n        children: recording ? 'Stop Recording' : 'Start Recording'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"audio-upload\",\n        children: \"Upload Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HiddenInput, {\n        type: \"file\",\n        id: \"audio-upload\",\n        accept: \"audio/*\",\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u4FE1\\u566A\\u6BD4 (dB):\", /*#__PURE__*/_jsxDEV(Select, {\n        value: snr,\n        onChange: e => setSnr(e.target.value),\n        children: [10, 20, 30, 40, 50].map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: value,\n          children: value\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addNoiseAndFilter,\n      children: \"\\u52A0\\u566A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 19\n    }, this), audioURL && /*#__PURE__*/_jsxDEV(AudioContainer, {\n      children: [/*#__PURE__*/_jsxDEV(AudioTitle, {\n        children: \"Original Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: audioURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this), noisyAudioURL && /*#__PURE__*/_jsxDEV(AudioContainer, {\n      children: [/*#__PURE__*/_jsxDEV(AudioTitle, {\n        children: \"Noisy Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: noisyAudioURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), filteredAudioURL && /*#__PURE__*/_jsxDEV(AudioContainer, {\n      children: [/*#__PURE__*/_jsxDEV(AudioTitle, {\n        children: \"Filtered Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: filteredAudioURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioProcessor, \"yIECieOfDLMXiYeDd6mi25MXLYw=\");\n_c9 = AudioProcessor;\nexport default AudioProcessor;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"InputLabel\");\n$RefreshReg$(_c4, \"HiddenInput\");\n$RefreshReg$(_c5, \"AudioContainer\");\n$RefreshReg$(_c6, \"AudioTitle\");\n$RefreshReg$(_c7, \"Loader\");\n$RefreshReg$(_c8, \"Select\");\n$RefreshReg$(_c9, \"AudioProcessor\");","map":{"version":3,"names":["React","useState","useRef","styled","jsxDEV","_jsxDEV","Container","div","_c","Button","button","_c2","InputLabel","label","_c3","HiddenInput","input","_c4","AudioContainer","_c5","AudioTitle","h2","_c6","Loader","_c7","Select","select","_c8","AudioProcessor","_s","recording","setRecording","loading","setLoading","audioURL","setAudioURL","noisyAudioURL","setNoisyAudioURL","filteredAudioURL","setFilteredAudioURL","audioContextRef","mediaRecorderRef","audioChunksRef","snr","setSnr","startRecording","current","window","AudioContext","webkitAudioContext","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","ondataavailable","event","push","data","onstop","processAudio","start","stopRecording","stop","audioBlob","Blob","type","audioUrl","URL","createObjectURL","addNoiseAndFilter","handleFileUpload","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","decodeAudioData","result","buffer","noisyBuffer","addGaussianNoise","noisyBlob","bufferToBlob","noisyUrl","filteredBuffer","applyFIRFilter","filteredBlob","filteredUrl","createBuffer","length","sampleRate","channelData","getChannelData","noisyData","signalPower","reduce","sum","val","noisePower","i","Math","random","sqrt","filterCoeffs","calculateFIRCoefficients","output","Float32Array","j","copyToChannel","N","fc1","fc2","h","M","n","sin","PI","cos","wavBuffer","audioBufferToWav","DataView","numOfChannels","numberOfChannels","bufferResult","ArrayBuffer","view","offset","pos","writeString","str","setUint8","charCodeAt","write16Bit","setInt16","write32Bit","setInt32","channel","sample","max","min","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","accept","onChange","value","e","map","controls","src","_c9","$RefreshReg$"],"sources":["/Users/king/Documents/GitHub/fir-filter/src/AudioProcessor.js"],"sourcesContent":["// src/AudioProcessor.js\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 20px;\n`;\n\nconst Button = styled.button`\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n\nconst InputLabel = styled.label`\n  display: inline-block;\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 10px;\n  cursor: pointer;\n  background-color: #008cba;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #007bb5;\n  }\n`;\n\nconst HiddenInput = styled.input`\n  display: none;\n`;\n\nconst AudioContainer = styled.div`\n  margin: 20px 0;\n  text-align: center;\n`;\n\nconst AudioTitle = styled.h2`\n  font-size: 18px;\n  margin: 10px 0;\n`;\n\nconst Loader = styled.div`\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #3498db;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 2s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst Select = styled.select`\n  padding: 10px;\n  margin: 10px;\n  font-size: 16px;\n`;\n\nconst AudioProcessor = () => {\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [audioURL, setAudioURL] = useState('');\n  const [noisyAudioURL, setNoisyAudioURL] = useState('');\n  const [filteredAudioURL, setFilteredAudioURL] = useState('');\n  const audioContextRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const [snr, setSnr] = useState(20);\n\n  const startRecording = () => {\n    if (!audioContextRef.current) {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    }\n    setRecording(true);\n    audioChunksRef.current = [];\n    navigator.mediaDevices.getUserMedia({ audio: true }).then(stream => {\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = processAudio;\n      mediaRecorderRef.current.start();\n    });\n  };\n\n  const stopRecording = () => {\n    setRecording(false);\n    mediaRecorderRef.current.stop();\n  };\n\n  const processAudio = () => {\n    setLoading(true);\n    const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n    const audioUrl = URL.createObjectURL(audioBlob);\n    setAudioURL(audioUrl);\n    addNoiseAndFilter(audioBlob);\n  };\n\n  const handleFileUpload = event => {\n    if (!audioContextRef.current) {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    }\n    const file = event.target.files[0];\n    if (file) {\n      setLoading(true);\n      const audioUrl = URL.createObjectURL(file);\n      setAudioURL(audioUrl);\n      addNoiseAndFilter(file);\n    }\n  };\n\n  const addNoiseAndFilter = (audioBlob) => {\n    const reader = new FileReader();\n    reader.readAsArrayBuffer(audioBlob);\n    reader.onloadend = () => {\n      if (!audioContextRef.current) {\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      }\n      audioContextRef.current.decodeAudioData(reader.result, buffer => {\n        const noisyBuffer = addGaussianNoise(buffer, snr);\n        const noisyBlob = bufferToBlob(noisyBuffer);\n        const noisyUrl = URL.createObjectURL(noisyBlob);\n        setNoisyAudioURL(noisyUrl);\n\n        const filteredBuffer = applyFIRFilter(noisyBuffer);\n        const filteredBlob = bufferToBlob(filteredBuffer);\n        const filteredUrl = URL.createObjectURL(filteredBlob);\n        setFilteredAudioURL(filteredUrl);\n        setLoading(false);\n      });\n    };\n  };\n\n  const addGaussianNoise = (buffer, snr) => {\n    const noisyBuffer = audioContextRef.current.createBuffer(1, buffer.length, buffer.sampleRate);\n    const channelData = buffer.getChannelData(0);\n    const noisyData = noisyBuffer.getChannelData(0);\n    const signalPower = channelData.reduce((sum, val) => sum + val * val, 0) / channelData.length;\n    const noisePower = signalPower / (10 ** (snr / 10));\n    for (let i = 0; i < channelData.length; i++) {\n      noisyData[i] = channelData[i] + (Math.random() - 0.5) * Math.sqrt(noisePower);\n    }\n    return noisyBuffer;\n  };\n\n  const applyFIRFilter = (buffer) => {\n    const filterCoeffs = calculateFIRCoefficients();\n    const input = buffer.getChannelData(0);\n    const output = new Float32Array(input.length);\n    for (let i = 0; i < input.length; i++) {\n      output[i] = 0;\n      for (let j = 0; j < filterCoeffs.length; j++) {\n        if (i - j >= 0) {\n          output[i] += input[i - j] * filterCoeffs[j];\n        }\n      }\n    }\n    const filteredBuffer = audioContextRef.current.createBuffer(1, output.length, buffer.sampleRate);\n    filteredBuffer.copyToChannel(output, 0);\n    return filteredBuffer;\n  };\n\n  const calculateFIRCoefficients = () => {\n    const N = 101; // 滤波器长度\n    const fc1 = 4000 / 16000; // 归一化通带边缘频率\n    const fc2 = 4500 / 16000; // 归一化阻带边缘频率\n    const h = new Float32Array(N);\n    const M = N - 1;\n    for (let n = 0; n < N; n++) {\n      if (n === M / 2) {\n        h[n] = 2 * (fc2 - fc1);\n      } else {\n        h[n] = (Math.sin(2 * Math.PI * fc2 * (n - M / 2)) - Math.sin(2 * Math.PI * fc1 * (n - M / 2))) / (Math.PI * (n - M / 2));\n      }\n      h[n] *= 0.54 - 0.46 * Math.cos(2 * Math.PI * n / M); // Hamming window\n    }\n    return h;\n  };\n\n  const bufferToBlob = (buffer) => {\n    const wavBuffer = audioBufferToWav(buffer);\n    return new Blob([new DataView(wavBuffer)], { type: 'audio/wav' });\n  };\n\n  const audioBufferToWav = (buffer) => {\n    const numOfChannels = buffer.numberOfChannels;\n    const length = buffer.length * numOfChannels * 2 + 44;\n    const bufferResult = new ArrayBuffer(length);\n    const view = new DataView(bufferResult);\n    let offset = 0;\n    let pos = 0;\n\n    const writeString = (str) => {\n      for (let i = 0; i < str.length; i++) {\n        view.setUint8(pos + offset, str.charCodeAt(i));\n        offset++;\n      }\n    };\n\n    const write16Bit = (data) => {\n      view.setInt16(pos + offset, data, true);\n      offset += 2;\n    };\n\n    const write32Bit = (data) => {\n      view.setInt32(pos + offset, data, true);\n      offset += 4;\n    };\n\n    writeString('RIFF');\n    write32Bit(length - 8);\n    writeString('WAVE');\n    writeString('fmt ');\n    write32Bit(16);\n    write16Bit(1);\n    write16Bit(numOfChannels);\n    write32Bit(buffer.sampleRate);\n    write32Bit(buffer.sampleRate * numOfChannels * 2);\n    write16Bit(numOfChannels * 2);\n    write16Bit(16);\n    writeString('data');\n    write32Bit(length - pos - 4);\n\n    for (let i = 0; i < buffer.length; i++) {\n      for (let channel = 0; channel < numOfChannels; channel++) {\n        const sample = Math.max(-1, Math.min(1, buffer.getChannelData(channel)[i]));\n        write16Bit(sample < 0 ? sample * 32768 : sample * 32767);\n      }\n    }\n\n    return bufferResult;\n  };\n\n  return (\n    <Container>\n      <div>\n        <Button onClick={recording ? stopRecording : startRecording}>\n          {recording ? 'Stop Recording' : 'Start Recording'}\n        </Button>\n        <InputLabel htmlFor=\"audio-upload\">Upload Audio</InputLabel>\n        <HiddenInput type=\"file\" id=\"audio-upload\" accept=\"audio/*\" onChange={handleFileUpload} />\n      </div>\n      <label>\n        信噪比 (dB):\n        <Select value={snr} onChange={(e) => setSnr(e.target.value)}>\n          {[10, 20, 30, 40, 50].map((value) => (\n            <option key={value} value={value}>\n              {value}\n            </option>\n          ))}\n        </Select>\n      </label>\n      <Button onClick={addNoiseAndFilter}>加噪</Button>\n      {loading && <Loader />}\n      {audioURL && (\n        <AudioContainer>\n          <AudioTitle>Original Audio</AudioTitle>\n          <audio controls src={audioURL}></audio>\n        </AudioContainer>\n      )}\n      {noisyAudioURL && (\n        <AudioContainer>\n          <AudioTitle>Noisy Audio</AudioTitle>\n          <audio controls src={noisyAudioURL}></audio>\n        </AudioContainer>\n      )}\n      {filteredAudioURL && (\n        <AudioContainer>\n          <AudioTitle>Filtered Audio</AudioTitle>\n          <audio controls src={filteredAudioURL}></audio>\n        </AudioContainer>\n      )}\n    </Container>\n  );\n};\n\nexport default AudioProcessor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}